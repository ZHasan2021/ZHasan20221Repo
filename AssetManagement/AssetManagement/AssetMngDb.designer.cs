#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssetManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AssetMngDb")]
	public partial class AssetMngDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssetMovementTbl(AssetMovementTbl instance);
    partial void UpdateAssetMovementTbl(AssetMovementTbl instance);
    partial void DeleteAssetMovementTbl(AssetMovementTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    partial void InsertAssetTbl(AssetTbl instance);
    partial void UpdateAssetTbl(AssetTbl instance);
    partial void DeleteAssetTbl(AssetTbl instance);
    partial void InsertAssetTransactionTbl(AssetTransactionTbl instance);
    partial void UpdateAssetTransactionTbl(AssetTransactionTbl instance);
    partial void DeleteAssetTransactionTbl(AssetTransactionTbl instance);
    partial void InsertCurrencyTbl(CurrencyTbl instance);
    partial void UpdateCurrencyTbl(CurrencyTbl instance);
    partial void DeleteCurrencyTbl(CurrencyTbl instance);
    partial void InsertDepartmentTbl(DepartmentTbl instance);
    partial void UpdateDepartmentTbl(DepartmentTbl instance);
    partial void DeleteDepartmentTbl(DepartmentTbl instance);
    partial void InsertEstateAreaUnitTbl(EstateAreaUnitTbl instance);
    partial void UpdateEstateAreaUnitTbl(EstateAreaUnitTbl instance);
    partial void DeleteEstateAreaUnitTbl(EstateAreaUnitTbl instance);
    partial void InsertFinancialItemCategoryTbl(FinancialItemCategoryTbl instance);
    partial void UpdateFinancialItemCategoryTbl(FinancialItemCategoryTbl instance);
    partial void DeleteFinancialItemCategoryTbl(FinancialItemCategoryTbl instance);
    partial void InsertFinancialItemTbl(FinancialItemTbl instance);
    partial void UpdateFinancialItemTbl(FinancialItemTbl instance);
    partial void DeleteFinancialItemTbl(FinancialItemTbl instance);
    partial void InsertImportExportTbl(ImportExportTbl instance);
    partial void UpdateImportExportTbl(ImportExportTbl instance);
    partial void DeleteImportExportTbl(ImportExportTbl instance);
    partial void InsertMainCategoryTbl(MainCategoryTbl instance);
    partial void UpdateMainCategoryTbl(MainCategoryTbl instance);
    partial void DeleteMainCategoryTbl(MainCategoryTbl instance);
    partial void InsertMinorCategoryTbl(MinorCategoryTbl instance);
    partial void UpdateMinorCategoryTbl(MinorCategoryTbl instance);
    partial void DeleteMinorCategoryTbl(MinorCategoryTbl instance);
    partial void InsertModelTbl(ModelTbl instance);
    partial void UpdateModelTbl(ModelTbl instance);
    partial void DeleteModelTbl(ModelTbl instance);
    partial void InsertOptionsTbl(OptionsTbl instance);
    partial void UpdateOptionsTbl(OptionsTbl instance);
    partial void DeleteOptionsTbl(OptionsTbl instance);
    partial void InsertSectionTbl(SectionTbl instance);
    partial void UpdateSectionTbl(SectionTbl instance);
    partial void DeleteSectionTbl(SectionTbl instance);
    partial void InsertSquareTbl(SquareTbl instance);
    partial void UpdateSquareTbl(SquareTbl instance);
    partial void DeleteSquareTbl(SquareTbl instance);
    partial void InsertStatusTbl(StatusTbl instance);
    partial void UpdateStatusTbl(StatusTbl instance);
    partial void DeleteStatusTbl(StatusTbl instance);
    partial void InsertSubDepartmentTbl(SubDepartmentTbl instance);
    partial void UpdateSubDepartmentTbl(SubDepartmentTbl instance);
    partial void DeleteSubDepartmentTbl(SubDepartmentTbl instance);
    partial void InsertTransactionTypeTbl(TransactionTypeTbl instance);
    partial void UpdateTransactionTypeTbl(TransactionTypeTbl instance);
    partial void DeleteTransactionTypeTbl(TransactionTypeTbl instance);
    partial void InsertUserRoleTbl(UserRoleTbl instance);
    partial void UpdateUserRoleTbl(UserRoleTbl instance);
    partial void DeleteUserRoleTbl(UserRoleTbl instance);
    #endregion
		
		public AssetMngDbDataContext() : 
				base(global::AssetManagement.Properties.Settings.Default.AssetMngDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AssetMngDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetMngDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetMngDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssetMngDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssetMovementTbl> AssetMovementTbls
		{
			get
			{
				return this.GetTable<AssetMovementTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
		
		public System.Data.Linq.Table<AssetTbl> AssetTbls
		{
			get
			{
				return this.GetTable<AssetTbl>();
			}
		}
		
		public System.Data.Linq.Table<AssetTransactionTbl> AssetTransactionTbls
		{
			get
			{
				return this.GetTable<AssetTransactionTbl>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyTbl> CurrencyTbls
		{
			get
			{
				return this.GetTable<CurrencyTbl>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentTbl> DepartmentTbls
		{
			get
			{
				return this.GetTable<DepartmentTbl>();
			}
		}
		
		public System.Data.Linq.Table<EstateAreaUnitTbl> EstateAreaUnitTbls
		{
			get
			{
				return this.GetTable<EstateAreaUnitTbl>();
			}
		}
		
		public System.Data.Linq.Table<FinancialItemCategoryTbl> FinancialItemCategoryTbls
		{
			get
			{
				return this.GetTable<FinancialItemCategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<FinancialItemTbl> FinancialItemTbls
		{
			get
			{
				return this.GetTable<FinancialItemTbl>();
			}
		}
		
		public System.Data.Linq.Table<ImportExportTbl> ImportExportTbls
		{
			get
			{
				return this.GetTable<ImportExportTbl>();
			}
		}
		
		public System.Data.Linq.Table<MainCategoryTbl> MainCategoryTbls
		{
			get
			{
				return this.GetTable<MainCategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<MinorCategoryTbl> MinorCategoryTbls
		{
			get
			{
				return this.GetTable<MinorCategoryTbl>();
			}
		}
		
		public System.Data.Linq.Table<ModelTbl> ModelTbls
		{
			get
			{
				return this.GetTable<ModelTbl>();
			}
		}
		
		public System.Data.Linq.Table<OptionsTbl> OptionsTbls
		{
			get
			{
				return this.GetTable<OptionsTbl>();
			}
		}
		
		public System.Data.Linq.Table<SectionTbl> SectionTbls
		{
			get
			{
				return this.GetTable<SectionTbl>();
			}
		}
		
		public System.Data.Linq.Table<SquareTbl> SquareTbls
		{
			get
			{
				return this.GetTable<SquareTbl>();
			}
		}
		
		public System.Data.Linq.Table<StatusTbl> StatusTbls
		{
			get
			{
				return this.GetTable<StatusTbl>();
			}
		}
		
		public System.Data.Linq.Table<SubDepartmentTbl> SubDepartmentTbls
		{
			get
			{
				return this.GetTable<SubDepartmentTbl>();
			}
		}
		
		public System.Data.Linq.Table<TransactionTypeTbl> TransactionTypeTbls
		{
			get
			{
				return this.GetTable<TransactionTypeTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleTbl> UserRoleTbls
		{
			get
			{
				return this.GetTable<UserRoleTbl>();
			}
		}
		
		public System.Data.Linq.Table<AssetMoveVw> AssetMoveVws
		{
			get
			{
				return this.GetTable<AssetMoveVw>();
			}
		}
		
		public System.Data.Linq.Table<SubDepartmentVw> SubDepartmentVws
		{
			get
			{
				return this.GetTable<SubDepartmentVw>();
			}
		}
		
		public System.Data.Linq.Table<AssetVw> AssetVws
		{
			get
			{
				return this.GetTable<AssetVw>();
			}
		}
		
		public System.Data.Linq.Table<AssetVw_All> AssetVw_Alls
		{
			get
			{
				return this.GetTable<AssetVw_All>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentVw> DepartmentVws
		{
			get
			{
				return this.GetTable<DepartmentVw>();
			}
		}
		
		public System.Data.Linq.Table<FinancialItemVw> FinancialItemVws
		{
			get
			{
				return this.GetTable<FinancialItemVw>();
			}
		}
		
		public System.Data.Linq.Table<MinorCategoryVw> MinorCategoryVws
		{
			get
			{
				return this.GetTable<MinorCategoryVw>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetMovementTbl")]
	public partial class AssetMovementTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AssetID;
		
		private string _FieldChanged;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private System.DateTime _MovementDate;
		
		private System.Nullable<System.DateTime> _AssetMovedOn;
		
		private System.Nullable<int> _AssetMovedBy;
		
		private string _AssetMovementUniqueKey;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<AssetTbl> _AssetTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnFieldChangedChanging(string value);
    partial void OnFieldChangedChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnMovementDateChanging(System.DateTime value);
    partial void OnMovementDateChanged();
    partial void OnAssetMovedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAssetMovedOnChanged();
    partial void OnAssetMovedByChanging(System.Nullable<int> value);
    partial void OnAssetMovedByChanged();
    partial void OnAssetMovementUniqueKeyChanging(string value);
    partial void OnAssetMovementUniqueKeyChanged();
    #endregion
		
		public AssetMovementTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			this._AssetTbl = default(EntityRef<AssetTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="Int NOT NULL")]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					if (this._AssetTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldChanged", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FieldChanged
		{
			get
			{
				return this._FieldChanged;
			}
			set
			{
				if ((this._FieldChanged != value))
				{
					this.OnFieldChangedChanging(value);
					this.SendPropertyChanging();
					this._FieldChanged = value;
					this.SendPropertyChanged("FieldChanged");
					this.OnFieldChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovementDate", DbType="Date NOT NULL")]
		public System.DateTime MovementDate
		{
			get
			{
				return this._MovementDate;
			}
			set
			{
				if ((this._MovementDate != value))
				{
					this.OnMovementDateChanging(value);
					this.SendPropertyChanging();
					this._MovementDate = value;
					this.SendPropertyChanged("MovementDate");
					this.OnMovementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMovedOn", DbType="Date")]
		public System.Nullable<System.DateTime> AssetMovedOn
		{
			get
			{
				return this._AssetMovedOn;
			}
			set
			{
				if ((this._AssetMovedOn != value))
				{
					this.OnAssetMovedOnChanging(value);
					this.SendPropertyChanging();
					this._AssetMovedOn = value;
					this.SendPropertyChanged("AssetMovedOn");
					this.OnAssetMovedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMovedBy", DbType="Int")]
		public System.Nullable<int> AssetMovedBy
		{
			get
			{
				return this._AssetMovedBy;
			}
			set
			{
				if ((this._AssetMovedBy != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetMovedByChanging(value);
					this.SendPropertyChanging();
					this._AssetMovedBy = value;
					this.SendPropertyChanged("AssetMovedBy");
					this.OnAssetMovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMovementUniqueKey", DbType="NVarChar(100)")]
		public string AssetMovementUniqueKey
		{
			get
			{
				return this._AssetMovementUniqueKey;
			}
			set
			{
				if ((this._AssetMovementUniqueKey != value))
				{
					this.OnAssetMovementUniqueKeyChanging(value);
					this.SendPropertyChanging();
					this._AssetMovementUniqueKey = value;
					this.SendPropertyChanged("AssetMovementUniqueKey");
					this.OnAssetMovementUniqueKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetMovementTbl", Storage="_UserTbl", ThisKey="AssetMovedBy", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.AssetMovementTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.AssetMovementTbls.Add(this);
						this._AssetMovedBy = value.ID;
					}
					else
					{
						this._AssetMovedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetTbl_AssetMovementTbl", Storage="_AssetTbl", ThisKey="AssetID", OtherKey="ID", IsForeignKey=true)]
		public AssetTbl AssetTbl
		{
			get
			{
				return this._AssetTbl.Entity;
			}
			set
			{
				AssetTbl previousValue = this._AssetTbl.Entity;
				if (((previousValue != value) 
							|| (this._AssetTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetTbl.Entity = null;
						previousValue.AssetMovementTbls.Remove(this);
					}
					this._AssetTbl.Entity = value;
					if ((value != null))
					{
						value.AssetMovementTbls.Add(this);
						this._AssetID = value.ID;
					}
					else
					{
						this._AssetID = default(int);
					}
					this.SendPropertyChanged("AssetTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserRole;
		
		private System.Nullable<System.DateTime> _PasswordUpdatedOn;
		
		private int _UserDept;
		
		private string _UserPrefix;
		
		private string _UserNotes;
		
		private EntitySet<AssetMovementTbl> _AssetMovementTbls;
		
		private EntitySet<AssetTransactionTbl> _AssetTransactionTbls;
		
		private EntityRef<DepartmentTbl> _DepartmentTbl;
		
		private EntityRef<UserRoleTbl> _UserRoleTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserRoleChanging(int value);
    partial void OnUserRoleChanged();
    partial void OnPasswordUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordUpdatedOnChanged();
    partial void OnUserDeptChanging(int value);
    partial void OnUserDeptChanged();
    partial void OnUserPrefixChanging(string value);
    partial void OnUserPrefixChanged();
    partial void OnUserNotesChanging(string value);
    partial void OnUserNotesChanged();
    #endregion
		
		public UserTbl()
		{
			this._AssetMovementTbls = new EntitySet<AssetMovementTbl>(new Action<AssetMovementTbl>(this.attach_AssetMovementTbls), new Action<AssetMovementTbl>(this.detach_AssetMovementTbls));
			this._AssetTransactionTbls = new EntitySet<AssetTransactionTbl>(new Action<AssetTransactionTbl>(this.attach_AssetTransactionTbls), new Action<AssetTransactionTbl>(this.detach_AssetTransactionTbls));
			this._DepartmentTbl = default(EntityRef<DepartmentTbl>);
			this._UserRoleTbl = default(EntityRef<UserRoleTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="Int NOT NULL")]
		public int UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					if (this._UserRoleTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordUpdatedOn", DbType="Date")]
		public System.Nullable<System.DateTime> PasswordUpdatedOn
		{
			get
			{
				return this._PasswordUpdatedOn;
			}
			set
			{
				if ((this._PasswordUpdatedOn != value))
				{
					this.OnPasswordUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._PasswordUpdatedOn = value;
					this.SendPropertyChanged("PasswordUpdatedOn");
					this.OnPasswordUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDept", DbType="Int NOT NULL")]
		public int UserDept
		{
			get
			{
				return this._UserDept;
			}
			set
			{
				if ((this._UserDept != value))
				{
					if (this._DepartmentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserDeptChanging(value);
					this.SendPropertyChanging();
					this._UserDept = value;
					this.SendPropertyChanged("UserDept");
					this.OnUserDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPrefix", DbType="NVarChar(50)")]
		public string UserPrefix
		{
			get
			{
				return this._UserPrefix;
			}
			set
			{
				if ((this._UserPrefix != value))
				{
					this.OnUserPrefixChanging(value);
					this.SendPropertyChanging();
					this._UserPrefix = value;
					this.SendPropertyChanged("UserPrefix");
					this.OnUserPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNotes", DbType="NVarChar(MAX)")]
		public string UserNotes
		{
			get
			{
				return this._UserNotes;
			}
			set
			{
				if ((this._UserNotes != value))
				{
					this.OnUserNotesChanging(value);
					this.SendPropertyChanging();
					this._UserNotes = value;
					this.SendPropertyChanged("UserNotes");
					this.OnUserNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetMovementTbl", Storage="_AssetMovementTbls", ThisKey="ID", OtherKey="AssetMovedBy")]
		public EntitySet<AssetMovementTbl> AssetMovementTbls
		{
			get
			{
				return this._AssetMovementTbls;
			}
			set
			{
				this._AssetMovementTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetTransactionTbl", Storage="_AssetTransactionTbls", ThisKey="ID", OtherKey="TransactionMadeBy")]
		public EntitySet<AssetTransactionTbl> AssetTransactionTbls
		{
			get
			{
				return this._AssetTransactionTbls;
			}
			set
			{
				this._AssetTransactionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentTbl_UserTbl", Storage="_DepartmentTbl", ThisKey="UserDept", OtherKey="ID", IsForeignKey=true)]
		public DepartmentTbl DepartmentTbl
		{
			get
			{
				return this._DepartmentTbl.Entity;
			}
			set
			{
				DepartmentTbl previousValue = this._DepartmentTbl.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentTbl.Entity = null;
						previousValue.UserTbls.Remove(this);
					}
					this._DepartmentTbl.Entity = value;
					if ((value != null))
					{
						value.UserTbls.Add(this);
						this._UserDept = value.ID;
					}
					else
					{
						this._UserDept = default(int);
					}
					this.SendPropertyChanged("DepartmentTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleTbl_UserTbl", Storage="_UserRoleTbl", ThisKey="UserRole", OtherKey="ID", IsForeignKey=true)]
		public UserRoleTbl UserRoleTbl
		{
			get
			{
				return this._UserRoleTbl.Entity;
			}
			set
			{
				UserRoleTbl previousValue = this._UserRoleTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleTbl.Entity = null;
						previousValue.UserTbls.Remove(this);
					}
					this._UserRoleTbl.Entity = value;
					if ((value != null))
					{
						value.UserTbls.Add(this);
						this._UserRole = value.ID;
					}
					else
					{
						this._UserRole = default(int);
					}
					this.SendPropertyChanged("UserRoleTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetMovementTbls(AssetMovementTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_AssetMovementTbls(AssetMovementTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
		
		private void attach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetTbl")]
	public partial class AssetTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AssetCode;
		
		private string _IsOldOrNewAsset;
		
		private int _AssetSubDepartment;
		
		private int _AssetSquare;
		
		private int _AssetMinorCategory;
		
		private string _AssetSpecifications;
		
		private int _ItemsQuantity;
		
		private string _Model;
		
		private string _Color;
		
		private string _Volume;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private System.Nullable<double> _PurchasePrice;
		
		private int _PurchasePriceCurrency;
		
		private string _PlaceOfPresence;
		
		private int _CurrentStatus;
		
		private string _BenefitPercentage;
		
		private double _ActualCurrentPrice;
		
		private int _ActualCurrentPriceCurrency;
		
		private string _CustodianName;
		
		private string _MoreDetails;
		
		private string _AssetNotes;
		
		private string _EstateAddress;
		
		private string _OwnerName;
		
		private string _OfUsed;
		
		private string _EstateOwnershipDocumentWith;
		
		private string _EstateArea;
		
		private System.Nullable<int> _EstateAreaUnit;
		
		private string _CarPanelNumber;
		
		private System.Nullable<int> _CarManufacturingYear;
		
		private string _CarChassisNumber;
		
		private string _CarEngineNumber;
		
		private double _DestructionRate;
		
		private int _LifeSpanInMonths;
		
		private System.Nullable<bool> _IsSold;
		
		private System.Nullable<bool> _IsOutOfWork;
		
		private System.Nullable<System.DateTime> _InsertedOn;
		
		private System.Nullable<System.DateTime> _LastModifiedOn;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private EntitySet<AssetMovementTbl> _AssetMovementTbls;
		
		private EntitySet<AssetTransactionTbl> _AssetTransactionTbls;
		
		private EntityRef<EstateAreaUnitTbl> _EstateAreaUnitTbl;
		
		private EntityRef<MinorCategoryTbl> _MinorCategoryTbl;
		
		private EntityRef<SquareTbl> _SquareTbl;
		
		private EntityRef<StatusTbl> _StatusTbl;
		
		private EntityRef<SubDepartmentTbl> _SubDepartmentTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAssetCodeChanging(string value);
    partial void OnAssetCodeChanged();
    partial void OnIsOldOrNewAssetChanging(string value);
    partial void OnIsOldOrNewAssetChanged();
    partial void OnAssetSubDepartmentChanging(int value);
    partial void OnAssetSubDepartmentChanged();
    partial void OnAssetSquareChanging(int value);
    partial void OnAssetSquareChanged();
    partial void OnAssetMinorCategoryChanging(int value);
    partial void OnAssetMinorCategoryChanged();
    partial void OnAssetSpecificationsChanging(string value);
    partial void OnAssetSpecificationsChanged();
    partial void OnItemsQuantityChanging(int value);
    partial void OnItemsQuantityChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnPurchasePriceChanging(System.Nullable<double> value);
    partial void OnPurchasePriceChanged();
    partial void OnPurchasePriceCurrencyChanging(int value);
    partial void OnPurchasePriceCurrencyChanged();
    partial void OnPlaceOfPresenceChanging(string value);
    partial void OnPlaceOfPresenceChanged();
    partial void OnCurrentStatusChanging(int value);
    partial void OnCurrentStatusChanged();
    partial void OnBenefitPercentageChanging(string value);
    partial void OnBenefitPercentageChanged();
    partial void OnActualCurrentPriceChanging(double value);
    partial void OnActualCurrentPriceChanged();
    partial void OnActualCurrentPriceCurrencyChanging(int value);
    partial void OnActualCurrentPriceCurrencyChanged();
    partial void OnCustodianNameChanging(string value);
    partial void OnCustodianNameChanged();
    partial void OnMoreDetailsChanging(string value);
    partial void OnMoreDetailsChanged();
    partial void OnAssetNotesChanging(string value);
    partial void OnAssetNotesChanged();
    partial void OnEstateAddressChanging(string value);
    partial void OnEstateAddressChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnOfUsedChanging(string value);
    partial void OnOfUsedChanged();
    partial void OnEstateOwnershipDocumentWithChanging(string value);
    partial void OnEstateOwnershipDocumentWithChanged();
    partial void OnEstateAreaChanging(string value);
    partial void OnEstateAreaChanged();
    partial void OnEstateAreaUnitChanging(System.Nullable<int> value);
    partial void OnEstateAreaUnitChanged();
    partial void OnCarPanelNumberChanging(string value);
    partial void OnCarPanelNumberChanged();
    partial void OnCarManufacturingYearChanging(System.Nullable<int> value);
    partial void OnCarManufacturingYearChanged();
    partial void OnCarChassisNumberChanging(string value);
    partial void OnCarChassisNumberChanged();
    partial void OnCarEngineNumberChanging(string value);
    partial void OnCarEngineNumberChanged();
    partial void OnDestructionRateChanging(double value);
    partial void OnDestructionRateChanged();
    partial void OnLifeSpanInMonthsChanging(int value);
    partial void OnLifeSpanInMonthsChanged();
    partial void OnIsSoldChanging(System.Nullable<bool> value);
    partial void OnIsSoldChanged();
    partial void OnIsOutOfWorkChanging(System.Nullable<bool> value);
    partial void OnIsOutOfWorkChanged();
    partial void OnInsertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedOnChanged();
    partial void OnLastModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    #endregion
		
		public AssetTbl()
		{
			this._AssetMovementTbls = new EntitySet<AssetMovementTbl>(new Action<AssetMovementTbl>(this.attach_AssetMovementTbls), new Action<AssetMovementTbl>(this.detach_AssetMovementTbls));
			this._AssetTransactionTbls = new EntitySet<AssetTransactionTbl>(new Action<AssetTransactionTbl>(this.attach_AssetTransactionTbls), new Action<AssetTransactionTbl>(this.detach_AssetTransactionTbls));
			this._EstateAreaUnitTbl = default(EntityRef<EstateAreaUnitTbl>);
			this._MinorCategoryTbl = default(EntityRef<MinorCategoryTbl>);
			this._SquareTbl = default(EntityRef<SquareTbl>);
			this._StatusTbl = default(EntityRef<StatusTbl>);
			this._SubDepartmentTbl = default(EntityRef<SubDepartmentTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCode", DbType="NVarChar(100)")]
		public string AssetCode
		{
			get
			{
				return this._AssetCode;
			}
			set
			{
				if ((this._AssetCode != value))
				{
					this.OnAssetCodeChanging(value);
					this.SendPropertyChanging();
					this._AssetCode = value;
					this.SendPropertyChanged("AssetCode");
					this.OnAssetCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOldOrNewAsset", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string IsOldOrNewAsset
		{
			get
			{
				return this._IsOldOrNewAsset;
			}
			set
			{
				if ((this._IsOldOrNewAsset != value))
				{
					this.OnIsOldOrNewAssetChanging(value);
					this.SendPropertyChanging();
					this._IsOldOrNewAsset = value;
					this.SendPropertyChanged("IsOldOrNewAsset");
					this.OnIsOldOrNewAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSubDepartment", DbType="Int NOT NULL")]
		public int AssetSubDepartment
		{
			get
			{
				return this._AssetSubDepartment;
			}
			set
			{
				if ((this._AssetSubDepartment != value))
				{
					if (this._SubDepartmentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetSubDepartmentChanging(value);
					this.SendPropertyChanging();
					this._AssetSubDepartment = value;
					this.SendPropertyChanged("AssetSubDepartment");
					this.OnAssetSubDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSquare", DbType="Int NOT NULL")]
		public int AssetSquare
		{
			get
			{
				return this._AssetSquare;
			}
			set
			{
				if ((this._AssetSquare != value))
				{
					if (this._SquareTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetSquareChanging(value);
					this.SendPropertyChanging();
					this._AssetSquare = value;
					this.SendPropertyChanged("AssetSquare");
					this.OnAssetSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMinorCategory", DbType="Int NOT NULL")]
		public int AssetMinorCategory
		{
			get
			{
				return this._AssetMinorCategory;
			}
			set
			{
				if ((this._AssetMinorCategory != value))
				{
					if (this._MinorCategoryTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetMinorCategoryChanging(value);
					this.SendPropertyChanging();
					this._AssetMinorCategory = value;
					this.SendPropertyChanged("AssetMinorCategory");
					this.OnAssetMinorCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSpecifications", DbType="NVarChar(MAX)")]
		public string AssetSpecifications
		{
			get
			{
				return this._AssetSpecifications;
			}
			set
			{
				if ((this._AssetSpecifications != value))
				{
					this.OnAssetSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._AssetSpecifications = value;
					this.SendPropertyChanged("AssetSpecifications");
					this.OnAssetSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsQuantity", DbType="Int NOT NULL")]
		public int ItemsQuantity
		{
			get
			{
				return this._ItemsQuantity;
			}
			set
			{
				if ((this._ItemsQuantity != value))
				{
					this.OnItemsQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemsQuantity = value;
					this.SendPropertyChanged("ItemsQuantity");
					this.OnItemsQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(100)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="NVarChar(50)")]
		public string Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="Float")]
		public System.Nullable<double> PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePriceCurrency", DbType="Int NOT NULL")]
		public int PurchasePriceCurrency
		{
			get
			{
				return this._PurchasePriceCurrency;
			}
			set
			{
				if ((this._PurchasePriceCurrency != value))
				{
					this.OnPurchasePriceCurrencyChanging(value);
					this.SendPropertyChanging();
					this._PurchasePriceCurrency = value;
					this.SendPropertyChanged("PurchasePriceCurrency");
					this.OnPurchasePriceCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceOfPresence", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PlaceOfPresence
		{
			get
			{
				return this._PlaceOfPresence;
			}
			set
			{
				if ((this._PlaceOfPresence != value))
				{
					this.OnPlaceOfPresenceChanging(value);
					this.SendPropertyChanging();
					this._PlaceOfPresence = value;
					this.SendPropertyChanged("PlaceOfPresence");
					this.OnPlaceOfPresenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStatus", DbType="Int NOT NULL")]
		public int CurrentStatus
		{
			get
			{
				return this._CurrentStatus;
			}
			set
			{
				if ((this._CurrentStatus != value))
				{
					if (this._StatusTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentStatusChanging(value);
					this.SendPropertyChanging();
					this._CurrentStatus = value;
					this.SendPropertyChanged("CurrentStatus");
					this.OnCurrentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitPercentage", DbType="NVarChar(50)")]
		public string BenefitPercentage
		{
			get
			{
				return this._BenefitPercentage;
			}
			set
			{
				if ((this._BenefitPercentage != value))
				{
					this.OnBenefitPercentageChanging(value);
					this.SendPropertyChanging();
					this._BenefitPercentage = value;
					this.SendPropertyChanged("BenefitPercentage");
					this.OnBenefitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCurrentPrice", DbType="Float NOT NULL")]
		public double ActualCurrentPrice
		{
			get
			{
				return this._ActualCurrentPrice;
			}
			set
			{
				if ((this._ActualCurrentPrice != value))
				{
					this.OnActualCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._ActualCurrentPrice = value;
					this.SendPropertyChanged("ActualCurrentPrice");
					this.OnActualCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCurrentPriceCurrency", DbType="Int NOT NULL")]
		public int ActualCurrentPriceCurrency
		{
			get
			{
				return this._ActualCurrentPriceCurrency;
			}
			set
			{
				if ((this._ActualCurrentPriceCurrency != value))
				{
					this.OnActualCurrentPriceCurrencyChanging(value);
					this.SendPropertyChanging();
					this._ActualCurrentPriceCurrency = value;
					this.SendPropertyChanged("ActualCurrentPriceCurrency");
					this.OnActualCurrentPriceCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustodianName", DbType="NVarChar(50)")]
		public string CustodianName
		{
			get
			{
				return this._CustodianName;
			}
			set
			{
				if ((this._CustodianName != value))
				{
					this.OnCustodianNameChanging(value);
					this.SendPropertyChanging();
					this._CustodianName = value;
					this.SendPropertyChanged("CustodianName");
					this.OnCustodianNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreDetails", DbType="NVarChar(MAX)")]
		public string MoreDetails
		{
			get
			{
				return this._MoreDetails;
			}
			set
			{
				if ((this._MoreDetails != value))
				{
					this.OnMoreDetailsChanging(value);
					this.SendPropertyChanging();
					this._MoreDetails = value;
					this.SendPropertyChanged("MoreDetails");
					this.OnMoreDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetNotes", DbType="NVarChar(MAX)")]
		public string AssetNotes
		{
			get
			{
				return this._AssetNotes;
			}
			set
			{
				if ((this._AssetNotes != value))
				{
					this.OnAssetNotesChanging(value);
					this.SendPropertyChanging();
					this._AssetNotes = value;
					this.SendPropertyChanged("AssetNotes");
					this.OnAssetNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateAddress", DbType="NVarChar(200)")]
		public string EstateAddress
		{
			get
			{
				return this._EstateAddress;
			}
			set
			{
				if ((this._EstateAddress != value))
				{
					this.OnEstateAddressChanging(value);
					this.SendPropertyChanging();
					this._EstateAddress = value;
					this.SendPropertyChanged("EstateAddress");
					this.OnEstateAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="NVarChar(200)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfUsed", DbType="NVarChar(200)")]
		public string OfUsed
		{
			get
			{
				return this._OfUsed;
			}
			set
			{
				if ((this._OfUsed != value))
				{
					this.OnOfUsedChanging(value);
					this.SendPropertyChanging();
					this._OfUsed = value;
					this.SendPropertyChanged("OfUsed");
					this.OnOfUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateOwnershipDocumentWith", DbType="NVarChar(200)")]
		public string EstateOwnershipDocumentWith
		{
			get
			{
				return this._EstateOwnershipDocumentWith;
			}
			set
			{
				if ((this._EstateOwnershipDocumentWith != value))
				{
					this.OnEstateOwnershipDocumentWithChanging(value);
					this.SendPropertyChanging();
					this._EstateOwnershipDocumentWith = value;
					this.SendPropertyChanged("EstateOwnershipDocumentWith");
					this.OnEstateOwnershipDocumentWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateArea", DbType="NVarChar(50)")]
		public string EstateArea
		{
			get
			{
				return this._EstateArea;
			}
			set
			{
				if ((this._EstateArea != value))
				{
					this.OnEstateAreaChanging(value);
					this.SendPropertyChanging();
					this._EstateArea = value;
					this.SendPropertyChanged("EstateArea");
					this.OnEstateAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateAreaUnit", DbType="Int")]
		public System.Nullable<int> EstateAreaUnit
		{
			get
			{
				return this._EstateAreaUnit;
			}
			set
			{
				if ((this._EstateAreaUnit != value))
				{
					if (this._EstateAreaUnitTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateAreaUnitChanging(value);
					this.SendPropertyChanging();
					this._EstateAreaUnit = value;
					this.SendPropertyChanged("EstateAreaUnit");
					this.OnEstateAreaUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPanelNumber", DbType="NVarChar(20)")]
		public string CarPanelNumber
		{
			get
			{
				return this._CarPanelNumber;
			}
			set
			{
				if ((this._CarPanelNumber != value))
				{
					this.OnCarPanelNumberChanging(value);
					this.SendPropertyChanging();
					this._CarPanelNumber = value;
					this.SendPropertyChanged("CarPanelNumber");
					this.OnCarPanelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarManufacturingYear", DbType="Int")]
		public System.Nullable<int> CarManufacturingYear
		{
			get
			{
				return this._CarManufacturingYear;
			}
			set
			{
				if ((this._CarManufacturingYear != value))
				{
					this.OnCarManufacturingYearChanging(value);
					this.SendPropertyChanging();
					this._CarManufacturingYear = value;
					this.SendPropertyChanged("CarManufacturingYear");
					this.OnCarManufacturingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarChassisNumber", DbType="NVarChar(50)")]
		public string CarChassisNumber
		{
			get
			{
				return this._CarChassisNumber;
			}
			set
			{
				if ((this._CarChassisNumber != value))
				{
					this.OnCarChassisNumberChanging(value);
					this.SendPropertyChanging();
					this._CarChassisNumber = value;
					this.SendPropertyChanged("CarChassisNumber");
					this.OnCarChassisNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarEngineNumber", DbType="NVarChar(50)")]
		public string CarEngineNumber
		{
			get
			{
				return this._CarEngineNumber;
			}
			set
			{
				if ((this._CarEngineNumber != value))
				{
					this.OnCarEngineNumberChanging(value);
					this.SendPropertyChanging();
					this._CarEngineNumber = value;
					this.SendPropertyChanged("CarEngineNumber");
					this.OnCarEngineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestructionRate", DbType="Float NOT NULL")]
		public double DestructionRate
		{
			get
			{
				return this._DestructionRate;
			}
			set
			{
				if ((this._DestructionRate != value))
				{
					this.OnDestructionRateChanging(value);
					this.SendPropertyChanging();
					this._DestructionRate = value;
					this.SendPropertyChanged("DestructionRate");
					this.OnDestructionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifeSpanInMonths", DbType="Int NOT NULL")]
		public int LifeSpanInMonths
		{
			get
			{
				return this._LifeSpanInMonths;
			}
			set
			{
				if ((this._LifeSpanInMonths != value))
				{
					this.OnLifeSpanInMonthsChanging(value);
					this.SendPropertyChanging();
					this._LifeSpanInMonths = value;
					this.SendPropertyChanged("LifeSpanInMonths");
					this.OnLifeSpanInMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSold", DbType="Bit")]
		public System.Nullable<bool> IsSold
		{
			get
			{
				return this._IsSold;
			}
			set
			{
				if ((this._IsSold != value))
				{
					this.OnIsSoldChanging(value);
					this.SendPropertyChanging();
					this._IsSold = value;
					this.SendPropertyChanged("IsSold");
					this.OnIsSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutOfWork", DbType="Bit")]
		public System.Nullable<bool> IsOutOfWork
		{
			get
			{
				return this._IsOutOfWork;
			}
			set
			{
				if ((this._IsOutOfWork != value))
				{
					this.OnIsOutOfWorkChanging(value);
					this.SendPropertyChanging();
					this._IsOutOfWork = value;
					this.SendPropertyChanged("IsOutOfWork");
					this.OnIsOutOfWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="Date")]
		public System.Nullable<System.DateTime> InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this.OnInsertedOnChanging(value);
					this.SendPropertyChanging();
					this._InsertedOn = value;
					this.SendPropertyChanged("InsertedOn");
					this.OnInsertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOn", DbType="Date")]
		public System.Nullable<System.DateTime> LastModifiedOn
		{
			get
			{
				return this._LastModifiedOn;
			}
			set
			{
				if ((this._LastModifiedOn != value))
				{
					this.OnLastModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOn = value;
					this.SendPropertyChanged("LastModifiedOn");
					this.OnLastModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetTbl_AssetMovementTbl", Storage="_AssetMovementTbls", ThisKey="ID", OtherKey="AssetID")]
		public EntitySet<AssetMovementTbl> AssetMovementTbls
		{
			get
			{
				return this._AssetMovementTbls;
			}
			set
			{
				this._AssetMovementTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetTbl_AssetTransactionTbl", Storage="_AssetTransactionTbls", ThisKey="ID", OtherKey="AssetID")]
		public EntitySet<AssetTransactionTbl> AssetTransactionTbls
		{
			get
			{
				return this._AssetTransactionTbls;
			}
			set
			{
				this._AssetTransactionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateAreaUnitTbl_AssetTbl", Storage="_EstateAreaUnitTbl", ThisKey="EstateAreaUnit", OtherKey="ID", IsForeignKey=true)]
		public EstateAreaUnitTbl EstateAreaUnitTbl
		{
			get
			{
				return this._EstateAreaUnitTbl.Entity;
			}
			set
			{
				EstateAreaUnitTbl previousValue = this._EstateAreaUnitTbl.Entity;
				if (((previousValue != value) 
							|| (this._EstateAreaUnitTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateAreaUnitTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._EstateAreaUnitTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._EstateAreaUnit = value.ID;
					}
					else
					{
						this._EstateAreaUnit = default(Nullable<int>);
					}
					this.SendPropertyChanged("EstateAreaUnitTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MinorCategoryTbl_AssetTbl", Storage="_MinorCategoryTbl", ThisKey="AssetMinorCategory", OtherKey="ID", IsForeignKey=true)]
		public MinorCategoryTbl MinorCategoryTbl
		{
			get
			{
				return this._MinorCategoryTbl.Entity;
			}
			set
			{
				MinorCategoryTbl previousValue = this._MinorCategoryTbl.Entity;
				if (((previousValue != value) 
							|| (this._MinorCategoryTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MinorCategoryTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._MinorCategoryTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._AssetMinorCategory = value.ID;
					}
					else
					{
						this._AssetMinorCategory = default(int);
					}
					this.SendPropertyChanged("MinorCategoryTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SquareTbl_AssetTbl", Storage="_SquareTbl", ThisKey="AssetSquare", OtherKey="ID", IsForeignKey=true)]
		public SquareTbl SquareTbl
		{
			get
			{
				return this._SquareTbl.Entity;
			}
			set
			{
				SquareTbl previousValue = this._SquareTbl.Entity;
				if (((previousValue != value) 
							|| (this._SquareTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SquareTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._SquareTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._AssetSquare = value.ID;
					}
					else
					{
						this._AssetSquare = default(int);
					}
					this.SendPropertyChanged("SquareTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusTbl_AssetTbl", Storage="_StatusTbl", ThisKey="CurrentStatus", OtherKey="ID", IsForeignKey=true)]
		public StatusTbl StatusTbl
		{
			get
			{
				return this._StatusTbl.Entity;
			}
			set
			{
				StatusTbl previousValue = this._StatusTbl.Entity;
				if (((previousValue != value) 
							|| (this._StatusTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._StatusTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._CurrentStatus = value.ID;
					}
					else
					{
						this._CurrentStatus = default(int);
					}
					this.SendPropertyChanged("StatusTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDepartmentTbl_AssetTbl", Storage="_SubDepartmentTbl", ThisKey="AssetSubDepartment", OtherKey="ID", IsForeignKey=true)]
		public SubDepartmentTbl SubDepartmentTbl
		{
			get
			{
				return this._SubDepartmentTbl.Entity;
			}
			set
			{
				SubDepartmentTbl previousValue = this._SubDepartmentTbl.Entity;
				if (((previousValue != value) 
							|| (this._SubDepartmentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubDepartmentTbl.Entity = null;
						previousValue.AssetTbls.Remove(this);
					}
					this._SubDepartmentTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTbls.Add(this);
						this._AssetSubDepartment = value.ID;
					}
					else
					{
						this._AssetSubDepartment = default(int);
					}
					this.SendPropertyChanged("SubDepartmentTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetMovementTbls(AssetMovementTbl entity)
		{
			this.SendPropertyChanging();
			entity.AssetTbl = this;
		}
		
		private void detach_AssetMovementTbls(AssetMovementTbl entity)
		{
			this.SendPropertyChanging();
			entity.AssetTbl = null;
		}
		
		private void attach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.AssetTbl = this;
		}
		
		private void detach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.AssetTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetTransactionTbl")]
	public partial class AssetTransactionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _AssetID;
		
		private int _TransactionType;
		
		private System.DateTime _TransactionDate;
		
		private string _TransactionNotes;
		
		private System.Nullable<System.DateTime> _TransactionMadeOn;
		
		private System.Nullable<int> _TransactionMadeBy;
		
		private double _MoneyAmount;
		
		private int _MoneyAmountCurrency;
		
		private System.Nullable<bool> _GetAssetOutOfWork;
		
		private System.Nullable<bool> _WithDestroying;
		
		private System.Nullable<double> _CurrentPriceWithDestroying;
		
		private string _AssetTransactionUniqueKey;
		
		private EntityRef<AssetTbl> _AssetTbl;
		
		private EntityRef<UserTbl> _UserTbl;
		
		private EntityRef<CurrencyTbl> _CurrencyTbl;
		
		private EntityRef<TransactionTypeTbl> _TransactionTypeTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAssetIDChanging(int value);
    partial void OnAssetIDChanged();
    partial void OnTransactionTypeChanging(int value);
    partial void OnTransactionTypeChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionNotesChanging(string value);
    partial void OnTransactionNotesChanged();
    partial void OnTransactionMadeOnChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionMadeOnChanged();
    partial void OnTransactionMadeByChanging(System.Nullable<int> value);
    partial void OnTransactionMadeByChanged();
    partial void OnMoneyAmountChanging(double value);
    partial void OnMoneyAmountChanged();
    partial void OnMoneyAmountCurrencyChanging(int value);
    partial void OnMoneyAmountCurrencyChanged();
    partial void OnGetAssetOutOfWorkChanging(System.Nullable<bool> value);
    partial void OnGetAssetOutOfWorkChanged();
    partial void OnWithDestroyingChanging(System.Nullable<bool> value);
    partial void OnWithDestroyingChanged();
    partial void OnCurrentPriceWithDestroyingChanging(System.Nullable<double> value);
    partial void OnCurrentPriceWithDestroyingChanged();
    partial void OnAssetTransactionUniqueKeyChanging(string value);
    partial void OnAssetTransactionUniqueKeyChanged();
    #endregion
		
		public AssetTransactionTbl()
		{
			this._AssetTbl = default(EntityRef<AssetTbl>);
			this._UserTbl = default(EntityRef<UserTbl>);
			this._CurrencyTbl = default(EntityRef<CurrencyTbl>);
			this._TransactionTypeTbl = default(EntityRef<TransactionTypeTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetID", DbType="Int NOT NULL")]
		public int AssetID
		{
			get
			{
				return this._AssetID;
			}
			set
			{
				if ((this._AssetID != value))
				{
					if (this._AssetTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetIDChanging(value);
					this.SendPropertyChanging();
					this._AssetID = value;
					this.SendPropertyChanged("AssetID");
					this.OnAssetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="Int NOT NULL")]
		public int TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					if (this._TransactionTypeTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNotes", DbType="NVarChar(200)")]
		public string TransactionNotes
		{
			get
			{
				return this._TransactionNotes;
			}
			set
			{
				if ((this._TransactionNotes != value))
				{
					this.OnTransactionNotesChanging(value);
					this.SendPropertyChanging();
					this._TransactionNotes = value;
					this.SendPropertyChanged("TransactionNotes");
					this.OnTransactionNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMadeOn", DbType="Date")]
		public System.Nullable<System.DateTime> TransactionMadeOn
		{
			get
			{
				return this._TransactionMadeOn;
			}
			set
			{
				if ((this._TransactionMadeOn != value))
				{
					this.OnTransactionMadeOnChanging(value);
					this.SendPropertyChanging();
					this._TransactionMadeOn = value;
					this.SendPropertyChanged("TransactionMadeOn");
					this.OnTransactionMadeOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMadeBy", DbType="Int")]
		public System.Nullable<int> TransactionMadeBy
		{
			get
			{
				return this._TransactionMadeBy;
			}
			set
			{
				if ((this._TransactionMadeBy != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionMadeByChanging(value);
					this.SendPropertyChanging();
					this._TransactionMadeBy = value;
					this.SendPropertyChanged("TransactionMadeBy");
					this.OnTransactionMadeByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyAmount", DbType="Float NOT NULL")]
		public double MoneyAmount
		{
			get
			{
				return this._MoneyAmount;
			}
			set
			{
				if ((this._MoneyAmount != value))
				{
					this.OnMoneyAmountChanging(value);
					this.SendPropertyChanging();
					this._MoneyAmount = value;
					this.SendPropertyChanged("MoneyAmount");
					this.OnMoneyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoneyAmountCurrency", DbType="Int NOT NULL")]
		public int MoneyAmountCurrency
		{
			get
			{
				return this._MoneyAmountCurrency;
			}
			set
			{
				if ((this._MoneyAmountCurrency != value))
				{
					if (this._CurrencyTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoneyAmountCurrencyChanging(value);
					this.SendPropertyChanging();
					this._MoneyAmountCurrency = value;
					this.SendPropertyChanged("MoneyAmountCurrency");
					this.OnMoneyAmountCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetAssetOutOfWork", DbType="Bit")]
		public System.Nullable<bool> GetAssetOutOfWork
		{
			get
			{
				return this._GetAssetOutOfWork;
			}
			set
			{
				if ((this._GetAssetOutOfWork != value))
				{
					this.OnGetAssetOutOfWorkChanging(value);
					this.SendPropertyChanging();
					this._GetAssetOutOfWork = value;
					this.SendPropertyChanged("GetAssetOutOfWork");
					this.OnGetAssetOutOfWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithDestroying", DbType="Bit")]
		public System.Nullable<bool> WithDestroying
		{
			get
			{
				return this._WithDestroying;
			}
			set
			{
				if ((this._WithDestroying != value))
				{
					this.OnWithDestroyingChanging(value);
					this.SendPropertyChanging();
					this._WithDestroying = value;
					this.SendPropertyChanged("WithDestroying");
					this.OnWithDestroyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPriceWithDestroying", DbType="Float")]
		public System.Nullable<double> CurrentPriceWithDestroying
		{
			get
			{
				return this._CurrentPriceWithDestroying;
			}
			set
			{
				if ((this._CurrentPriceWithDestroying != value))
				{
					this.OnCurrentPriceWithDestroyingChanging(value);
					this.SendPropertyChanging();
					this._CurrentPriceWithDestroying = value;
					this.SendPropertyChanged("CurrentPriceWithDestroying");
					this.OnCurrentPriceWithDestroyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTransactionUniqueKey", DbType="NVarChar(100)")]
		public string AssetTransactionUniqueKey
		{
			get
			{
				return this._AssetTransactionUniqueKey;
			}
			set
			{
				if ((this._AssetTransactionUniqueKey != value))
				{
					this.OnAssetTransactionUniqueKeyChanging(value);
					this.SendPropertyChanging();
					this._AssetTransactionUniqueKey = value;
					this.SendPropertyChanged("AssetTransactionUniqueKey");
					this.OnAssetTransactionUniqueKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetTbl_AssetTransactionTbl", Storage="_AssetTbl", ThisKey="AssetID", OtherKey="ID", IsForeignKey=true)]
		public AssetTbl AssetTbl
		{
			get
			{
				return this._AssetTbl.Entity;
			}
			set
			{
				AssetTbl previousValue = this._AssetTbl.Entity;
				if (((previousValue != value) 
							|| (this._AssetTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetTbl.Entity = null;
						previousValue.AssetTransactionTbls.Remove(this);
					}
					this._AssetTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTransactionTbls.Add(this);
						this._AssetID = value.ID;
					}
					else
					{
						this._AssetID = default(int);
					}
					this.SendPropertyChanged("AssetTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_AssetTransactionTbl", Storage="_UserTbl", ThisKey="TransactionMadeBy", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.AssetTransactionTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTransactionTbls.Add(this);
						this._TransactionMadeBy = value.ID;
					}
					else
					{
						this._TransactionMadeBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_AssetTransactionTbl", Storage="_CurrencyTbl", ThisKey="MoneyAmountCurrency", OtherKey="ID", IsForeignKey=true)]
		public CurrencyTbl CurrencyTbl
		{
			get
			{
				return this._CurrencyTbl.Entity;
			}
			set
			{
				CurrencyTbl previousValue = this._CurrencyTbl.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyTbl.Entity = null;
						previousValue.AssetTransactionTbls.Remove(this);
					}
					this._CurrencyTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTransactionTbls.Add(this);
						this._MoneyAmountCurrency = value.ID;
					}
					else
					{
						this._MoneyAmountCurrency = default(int);
					}
					this.SendPropertyChanged("CurrencyTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionTypeTbl_AssetTransactionTbl", Storage="_TransactionTypeTbl", ThisKey="TransactionType", OtherKey="ID", IsForeignKey=true)]
		public TransactionTypeTbl TransactionTypeTbl
		{
			get
			{
				return this._TransactionTypeTbl.Entity;
			}
			set
			{
				TransactionTypeTbl previousValue = this._TransactionTypeTbl.Entity;
				if (((previousValue != value) 
							|| (this._TransactionTypeTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionTypeTbl.Entity = null;
						previousValue.AssetTransactionTbls.Remove(this);
					}
					this._TransactionTypeTbl.Entity = value;
					if ((value != null))
					{
						value.AssetTransactionTbls.Add(this);
						this._TransactionType = value.ID;
					}
					else
					{
						this._TransactionType = default(int);
					}
					this.SendPropertyChanged("TransactionTypeTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyTbl")]
	public partial class CurrencyTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CurrencyName;
		
		private EntitySet<AssetTransactionTbl> _AssetTransactionTbls;
		
		private EntitySet<FinancialItemTbl> _FinancialItemTbls;
		
		private EntitySet<FinancialItemTbl> _FinancialItemTbls1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    #endregion
		
		public CurrencyTbl()
		{
			this._AssetTransactionTbls = new EntitySet<AssetTransactionTbl>(new Action<AssetTransactionTbl>(this.attach_AssetTransactionTbls), new Action<AssetTransactionTbl>(this.detach_AssetTransactionTbls));
			this._FinancialItemTbls = new EntitySet<FinancialItemTbl>(new Action<FinancialItemTbl>(this.attach_FinancialItemTbls), new Action<FinancialItemTbl>(this.detach_FinancialItemTbls));
			this._FinancialItemTbls1 = new EntitySet<FinancialItemTbl>(new Action<FinancialItemTbl>(this.attach_FinancialItemTbls1), new Action<FinancialItemTbl>(this.detach_FinancialItemTbls1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_AssetTransactionTbl", Storage="_AssetTransactionTbls", ThisKey="ID", OtherKey="MoneyAmountCurrency")]
		public EntitySet<AssetTransactionTbl> AssetTransactionTbls
		{
			get
			{
				return this._AssetTransactionTbls;
			}
			set
			{
				this._AssetTransactionTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_FinancialItemTbl", Storage="_FinancialItemTbls", ThisKey="ID", OtherKey="FinancialItemCurrency")]
		public EntitySet<FinancialItemTbl> FinancialItemTbls
		{
			get
			{
				return this._FinancialItemTbls;
			}
			set
			{
				this._FinancialItemTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_FinancialItemTbl1", Storage="_FinancialItemTbls1", ThisKey="ID", OtherKey="FinancialItemCurrency")]
		public EntitySet<FinancialItemTbl> FinancialItemTbls1
		{
			get
			{
				return this._FinancialItemTbls1;
			}
			set
			{
				this._FinancialItemTbls1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl = this;
		}
		
		private void detach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl = null;
		}
		
		private void attach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl = this;
		}
		
		private void detach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl = null;
		}
		
		private void attach_FinancialItemTbls1(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl1 = this;
		}
		
		private void detach_FinancialItemTbls1(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyTbl1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentTbl")]
	public partial class DepartmentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DepartmentName;
		
		private int _SectionOfDepartment;
		
		private EntitySet<UserTbl> _UserTbls;
		
		private EntitySet<SubDepartmentTbl> _SubDepartmentTbls;
		
		private EntityRef<SectionTbl> _SectionTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnSectionOfDepartmentChanging(int value);
    partial void OnSectionOfDepartmentChanged();
    #endregion
		
		public DepartmentTbl()
		{
			this._UserTbls = new EntitySet<UserTbl>(new Action<UserTbl>(this.attach_UserTbls), new Action<UserTbl>(this.detach_UserTbls));
			this._SubDepartmentTbls = new EntitySet<SubDepartmentTbl>(new Action<SubDepartmentTbl>(this.attach_SubDepartmentTbls), new Action<SubDepartmentTbl>(this.detach_SubDepartmentTbls));
			this._SectionTbl = default(EntityRef<SectionTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOfDepartment", DbType="Int NOT NULL")]
		public int SectionOfDepartment
		{
			get
			{
				return this._SectionOfDepartment;
			}
			set
			{
				if ((this._SectionOfDepartment != value))
				{
					if (this._SectionTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectionOfDepartmentChanging(value);
					this.SendPropertyChanging();
					this._SectionOfDepartment = value;
					this.SendPropertyChanged("SectionOfDepartment");
					this.OnSectionOfDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentTbl_UserTbl", Storage="_UserTbls", ThisKey="ID", OtherKey="UserDept")]
		public EntitySet<UserTbl> UserTbls
		{
			get
			{
				return this._UserTbls;
			}
			set
			{
				this._UserTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentTbl_SubDepartmentTbl", Storage="_SubDepartmentTbls", ThisKey="ID", OtherKey="MainDepartment")]
		public EntitySet<SubDepartmentTbl> SubDepartmentTbls
		{
			get
			{
				return this._SubDepartmentTbls;
			}
			set
			{
				this._SubDepartmentTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SectionTbl_DepartmentTbl", Storage="_SectionTbl", ThisKey="SectionOfDepartment", OtherKey="ID", IsForeignKey=true)]
		public SectionTbl SectionTbl
		{
			get
			{
				return this._SectionTbl.Entity;
			}
			set
			{
				SectionTbl previousValue = this._SectionTbl.Entity;
				if (((previousValue != value) 
							|| (this._SectionTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SectionTbl.Entity = null;
						previousValue.DepartmentTbls.Remove(this);
					}
					this._SectionTbl.Entity = value;
					if ((value != null))
					{
						value.DepartmentTbls.Add(this);
						this._SectionOfDepartment = value.ID;
					}
					else
					{
						this._SectionOfDepartment = default(int);
					}
					this.SendPropertyChanged("SectionTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTbls(UserTbl entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentTbl = this;
		}
		
		private void detach_UserTbls(UserTbl entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentTbl = null;
		}
		
		private void attach_SubDepartmentTbls(SubDepartmentTbl entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentTbl = this;
		}
		
		private void detach_SubDepartmentTbls(SubDepartmentTbl entity)
		{
			this.SendPropertyChanging();
			entity.DepartmentTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateAreaUnitTbl")]
	public partial class EstateAreaUnitTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EstateAreaUnitName;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstateAreaUnitNameChanging(string value);
    partial void OnEstateAreaUnitNameChanged();
    #endregion
		
		public EstateAreaUnitTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateAreaUnitName", DbType="NVarChar(100)")]
		public string EstateAreaUnitName
		{
			get
			{
				return this._EstateAreaUnitName;
			}
			set
			{
				if ((this._EstateAreaUnitName != value))
				{
					this.OnEstateAreaUnitNameChanging(value);
					this.SendPropertyChanging();
					this._EstateAreaUnitName = value;
					this.SendPropertyChanged("EstateAreaUnitName");
					this.OnEstateAreaUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateAreaUnitTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="EstateAreaUnit")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.EstateAreaUnitTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.EstateAreaUnitTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialItemCategoryTbl")]
	public partial class FinancialItemCategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FinancialItemCategoryName;
		
		private string _FinancialItemCategoryDetails;
		
		private string _IsIncomingOrOutgiung;
		
		private EntitySet<FinancialItemTbl> _FinancialItemTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFinancialItemCategoryNameChanging(string value);
    partial void OnFinancialItemCategoryNameChanged();
    partial void OnFinancialItemCategoryDetailsChanging(string value);
    partial void OnFinancialItemCategoryDetailsChanged();
    partial void OnIsIncomingOrOutgiungChanging(string value);
    partial void OnIsIncomingOrOutgiungChanged();
    #endregion
		
		public FinancialItemCategoryTbl()
		{
			this._FinancialItemTbls = new EntitySet<FinancialItemTbl>(new Action<FinancialItemTbl>(this.attach_FinancialItemTbls), new Action<FinancialItemTbl>(this.detach_FinancialItemTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemCategoryName", DbType="NVarChar(200)")]
		public string FinancialItemCategoryName
		{
			get
			{
				return this._FinancialItemCategoryName;
			}
			set
			{
				if ((this._FinancialItemCategoryName != value))
				{
					this.OnFinancialItemCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemCategoryName = value;
					this.SendPropertyChanged("FinancialItemCategoryName");
					this.OnFinancialItemCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemCategoryDetails", DbType="NVarChar(MAX)")]
		public string FinancialItemCategoryDetails
		{
			get
			{
				return this._FinancialItemCategoryDetails;
			}
			set
			{
				if ((this._FinancialItemCategoryDetails != value))
				{
					this.OnFinancialItemCategoryDetailsChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemCategoryDetails = value;
					this.SendPropertyChanged("FinancialItemCategoryDetails");
					this.OnFinancialItemCategoryDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncomingOrOutgiung", DbType="NVarChar(50)")]
		public string IsIncomingOrOutgiung
		{
			get
			{
				return this._IsIncomingOrOutgiung;
			}
			set
			{
				if ((this._IsIncomingOrOutgiung != value))
				{
					this.OnIsIncomingOrOutgiungChanging(value);
					this.SendPropertyChanging();
					this._IsIncomingOrOutgiung = value;
					this.SendPropertyChanged("IsIncomingOrOutgiung");
					this.OnIsIncomingOrOutgiungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialItemCategoryTbl_FinancialItemTbl", Storage="_FinancialItemTbls", ThisKey="ID", OtherKey="FinancialItemCategory")]
		public EntitySet<FinancialItemTbl> FinancialItemTbls
		{
			get
			{
				return this._FinancialItemTbls;
			}
			set
			{
				this._FinancialItemTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.FinancialItemCategoryTbl = this;
		}
		
		private void detach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.FinancialItemCategoryTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialItemTbl")]
	public partial class FinancialItemTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FinancialItemCode;
		
		private int _FinancialItemSubDept;
		
		private int _FinancialItemCategory;
		
		private string _FinancialItemDescription;
		
		private System.DateTime _FinancialItemInsertionDate;
		
		private string _IncomingOrOutgoing;
		
		private double _IncomingAmount;
		
		private double _OutgoingAmount;
		
		private int _FinancialItemCurrency;
		
		private string _AdditionalNotes;
		
		private System.Nullable<System.DateTime> _InsertedOn;
		
		private System.Nullable<System.DateTime> _LastModifiedOn;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private EntityRef<CurrencyTbl> _CurrencyTbl;
		
		private EntityRef<CurrencyTbl> _CurrencyTbl1;
		
		private EntityRef<FinancialItemCategoryTbl> _FinancialItemCategoryTbl;
		
		private EntityRef<SubDepartmentTbl> _SubDepartmentTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFinancialItemCodeChanging(string value);
    partial void OnFinancialItemCodeChanged();
    partial void OnFinancialItemSubDeptChanging(int value);
    partial void OnFinancialItemSubDeptChanged();
    partial void OnFinancialItemCategoryChanging(int value);
    partial void OnFinancialItemCategoryChanged();
    partial void OnFinancialItemDescriptionChanging(string value);
    partial void OnFinancialItemDescriptionChanged();
    partial void OnFinancialItemInsertionDateChanging(System.DateTime value);
    partial void OnFinancialItemInsertionDateChanged();
    partial void OnIncomingOrOutgoingChanging(string value);
    partial void OnIncomingOrOutgoingChanged();
    partial void OnIncomingAmountChanging(double value);
    partial void OnIncomingAmountChanged();
    partial void OnOutgoingAmountChanging(double value);
    partial void OnOutgoingAmountChanged();
    partial void OnFinancialItemCurrencyChanging(int value);
    partial void OnFinancialItemCurrencyChanged();
    partial void OnAdditionalNotesChanging(string value);
    partial void OnAdditionalNotesChanged();
    partial void OnInsertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedOnChanged();
    partial void OnLastModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    #endregion
		
		public FinancialItemTbl()
		{
			this._CurrencyTbl = default(EntityRef<CurrencyTbl>);
			this._CurrencyTbl1 = default(EntityRef<CurrencyTbl>);
			this._FinancialItemCategoryTbl = default(EntityRef<FinancialItemCategoryTbl>);
			this._SubDepartmentTbl = default(EntityRef<SubDepartmentTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemCode", DbType="NVarChar(50)")]
		public string FinancialItemCode
		{
			get
			{
				return this._FinancialItemCode;
			}
			set
			{
				if ((this._FinancialItemCode != value))
				{
					this.OnFinancialItemCodeChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemCode = value;
					this.SendPropertyChanged("FinancialItemCode");
					this.OnFinancialItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemSubDept", DbType="Int NOT NULL")]
		public int FinancialItemSubDept
		{
			get
			{
				return this._FinancialItemSubDept;
			}
			set
			{
				if ((this._FinancialItemSubDept != value))
				{
					if (this._SubDepartmentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialItemSubDeptChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemSubDept = value;
					this.SendPropertyChanged("FinancialItemSubDept");
					this.OnFinancialItemSubDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemCategory", DbType="Int NOT NULL")]
		public int FinancialItemCategory
		{
			get
			{
				return this._FinancialItemCategory;
			}
			set
			{
				if ((this._FinancialItemCategory != value))
				{
					if (this._FinancialItemCategoryTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemCategory = value;
					this.SendPropertyChanged("FinancialItemCategory");
					this.OnFinancialItemCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemDescription", DbType="NVarChar(300)")]
		public string FinancialItemDescription
		{
			get
			{
				return this._FinancialItemDescription;
			}
			set
			{
				if ((this._FinancialItemDescription != value))
				{
					this.OnFinancialItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemDescription = value;
					this.SendPropertyChanged("FinancialItemDescription");
					this.OnFinancialItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemInsertionDate", DbType="Date NOT NULL")]
		public System.DateTime FinancialItemInsertionDate
		{
			get
			{
				return this._FinancialItemInsertionDate;
			}
			set
			{
				if ((this._FinancialItemInsertionDate != value))
				{
					this.OnFinancialItemInsertionDateChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemInsertionDate = value;
					this.SendPropertyChanged("FinancialItemInsertionDate");
					this.OnFinancialItemInsertionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomingOrOutgoing", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string IncomingOrOutgoing
		{
			get
			{
				return this._IncomingOrOutgoing;
			}
			set
			{
				if ((this._IncomingOrOutgoing != value))
				{
					this.OnIncomingOrOutgoingChanging(value);
					this.SendPropertyChanging();
					this._IncomingOrOutgoing = value;
					this.SendPropertyChanged("IncomingOrOutgoing");
					this.OnIncomingOrOutgoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomingAmount", DbType="Float NOT NULL")]
		public double IncomingAmount
		{
			get
			{
				return this._IncomingAmount;
			}
			set
			{
				if ((this._IncomingAmount != value))
				{
					this.OnIncomingAmountChanging(value);
					this.SendPropertyChanging();
					this._IncomingAmount = value;
					this.SendPropertyChanged("IncomingAmount");
					this.OnIncomingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutgoingAmount", DbType="Float NOT NULL")]
		public double OutgoingAmount
		{
			get
			{
				return this._OutgoingAmount;
			}
			set
			{
				if ((this._OutgoingAmount != value))
				{
					this.OnOutgoingAmountChanging(value);
					this.SendPropertyChanging();
					this._OutgoingAmount = value;
					this.SendPropertyChanged("OutgoingAmount");
					this.OnOutgoingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialItemCurrency", DbType="Int NOT NULL")]
		public int FinancialItemCurrency
		{
			get
			{
				return this._FinancialItemCurrency;
			}
			set
			{
				if ((this._FinancialItemCurrency != value))
				{
					if ((this._CurrencyTbl.HasLoadedOrAssignedValue || this._CurrencyTbl1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialItemCurrencyChanging(value);
					this.SendPropertyChanging();
					this._FinancialItemCurrency = value;
					this.SendPropertyChanged("FinancialItemCurrency");
					this.OnFinancialItemCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalNotes", DbType="NVarChar(300)")]
		public string AdditionalNotes
		{
			get
			{
				return this._AdditionalNotes;
			}
			set
			{
				if ((this._AdditionalNotes != value))
				{
					this.OnAdditionalNotesChanging(value);
					this.SendPropertyChanging();
					this._AdditionalNotes = value;
					this.SendPropertyChanged("AdditionalNotes");
					this.OnAdditionalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="Date")]
		public System.Nullable<System.DateTime> InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this.OnInsertedOnChanging(value);
					this.SendPropertyChanging();
					this._InsertedOn = value;
					this.SendPropertyChanged("InsertedOn");
					this.OnInsertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOn", DbType="Date")]
		public System.Nullable<System.DateTime> LastModifiedOn
		{
			get
			{
				return this._LastModifiedOn;
			}
			set
			{
				if ((this._LastModifiedOn != value))
				{
					this.OnLastModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOn = value;
					this.SendPropertyChanged("LastModifiedOn");
					this.OnLastModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_FinancialItemTbl", Storage="_CurrencyTbl", ThisKey="FinancialItemCurrency", OtherKey="ID", IsForeignKey=true)]
		public CurrencyTbl CurrencyTbl
		{
			get
			{
				return this._CurrencyTbl.Entity;
			}
			set
			{
				CurrencyTbl previousValue = this._CurrencyTbl.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyTbl.Entity = null;
						previousValue.FinancialItemTbls.Remove(this);
					}
					this._CurrencyTbl.Entity = value;
					if ((value != null))
					{
						value.FinancialItemTbls.Add(this);
						this._FinancialItemCurrency = value.ID;
					}
					else
					{
						this._FinancialItemCurrency = default(int);
					}
					this.SendPropertyChanged("CurrencyTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyTbl_FinancialItemTbl1", Storage="_CurrencyTbl1", ThisKey="FinancialItemCurrency", OtherKey="ID", IsForeignKey=true)]
		public CurrencyTbl CurrencyTbl1
		{
			get
			{
				return this._CurrencyTbl1.Entity;
			}
			set
			{
				CurrencyTbl previousValue = this._CurrencyTbl1.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyTbl1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyTbl1.Entity = null;
						previousValue.FinancialItemTbls1.Remove(this);
					}
					this._CurrencyTbl1.Entity = value;
					if ((value != null))
					{
						value.FinancialItemTbls1.Add(this);
						this._FinancialItemCurrency = value.ID;
					}
					else
					{
						this._FinancialItemCurrency = default(int);
					}
					this.SendPropertyChanged("CurrencyTbl1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialItemCategoryTbl_FinancialItemTbl", Storage="_FinancialItemCategoryTbl", ThisKey="FinancialItemCategory", OtherKey="ID", IsForeignKey=true)]
		public FinancialItemCategoryTbl FinancialItemCategoryTbl
		{
			get
			{
				return this._FinancialItemCategoryTbl.Entity;
			}
			set
			{
				FinancialItemCategoryTbl previousValue = this._FinancialItemCategoryTbl.Entity;
				if (((previousValue != value) 
							|| (this._FinancialItemCategoryTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialItemCategoryTbl.Entity = null;
						previousValue.FinancialItemTbls.Remove(this);
					}
					this._FinancialItemCategoryTbl.Entity = value;
					if ((value != null))
					{
						value.FinancialItemTbls.Add(this);
						this._FinancialItemCategory = value.ID;
					}
					else
					{
						this._FinancialItemCategory = default(int);
					}
					this.SendPropertyChanged("FinancialItemCategoryTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDepartmentTbl_FinancialItemTbl", Storage="_SubDepartmentTbl", ThisKey="FinancialItemSubDept", OtherKey="ID", IsForeignKey=true)]
		public SubDepartmentTbl SubDepartmentTbl
		{
			get
			{
				return this._SubDepartmentTbl.Entity;
			}
			set
			{
				SubDepartmentTbl previousValue = this._SubDepartmentTbl.Entity;
				if (((previousValue != value) 
							|| (this._SubDepartmentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubDepartmentTbl.Entity = null;
						previousValue.FinancialItemTbls.Remove(this);
					}
					this._SubDepartmentTbl.Entity = value;
					if ((value != null))
					{
						value.FinancialItemTbls.Add(this);
						this._FinancialItemSubDept = value.ID;
					}
					else
					{
						this._FinancialItemSubDept = default(int);
					}
					this.SendPropertyChanged("SubDepartmentTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportExportTbl")]
	public partial class ImportExportTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ImportOrExport;
		
		private System.DateTime _ActionDate;
		
		private string _TablesExported;
		
		private string _ActionBySection;
		
		private string _ActionByDepartment;
		
		private string _ActionBySubDepartment;
		
		private System.Nullable<System.DateTime> _InsertedOn;
		
		private System.Nullable<System.DateTime> _LastModifiedOn;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private string _ActionNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImportOrExportChanging(string value);
    partial void OnImportOrExportChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    partial void OnTablesExportedChanging(string value);
    partial void OnTablesExportedChanged();
    partial void OnActionBySectionChanging(string value);
    partial void OnActionBySectionChanged();
    partial void OnActionByDepartmentChanging(string value);
    partial void OnActionByDepartmentChanged();
    partial void OnActionBySubDepartmentChanging(string value);
    partial void OnActionBySubDepartmentChanged();
    partial void OnInsertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedOnChanged();
    partial void OnLastModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    partial void OnActionNotesChanging(string value);
    partial void OnActionNotesChanged();
    #endregion
		
		public ImportExportTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportOrExport", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ImportOrExport
		{
			get
			{
				return this._ImportOrExport;
			}
			set
			{
				if ((this._ImportOrExport != value))
				{
					this.OnImportOrExportChanging(value);
					this.SendPropertyChanging();
					this._ImportOrExport = value;
					this.SendPropertyChanged("ImportOrExport");
					this.OnImportOrExportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="Date NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TablesExported", DbType="NVarChar(50)")]
		public string TablesExported
		{
			get
			{
				return this._TablesExported;
			}
			set
			{
				if ((this._TablesExported != value))
				{
					this.OnTablesExportedChanging(value);
					this.SendPropertyChanging();
					this._TablesExported = value;
					this.SendPropertyChanged("TablesExported");
					this.OnTablesExportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionBySection", DbType="NVarChar(100)")]
		public string ActionBySection
		{
			get
			{
				return this._ActionBySection;
			}
			set
			{
				if ((this._ActionBySection != value))
				{
					this.OnActionBySectionChanging(value);
					this.SendPropertyChanging();
					this._ActionBySection = value;
					this.SendPropertyChanged("ActionBySection");
					this.OnActionBySectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionByDepartment", DbType="NVarChar(100)")]
		public string ActionByDepartment
		{
			get
			{
				return this._ActionByDepartment;
			}
			set
			{
				if ((this._ActionByDepartment != value))
				{
					this.OnActionByDepartmentChanging(value);
					this.SendPropertyChanging();
					this._ActionByDepartment = value;
					this.SendPropertyChanged("ActionByDepartment");
					this.OnActionByDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionBySubDepartment", DbType="NVarChar(100)")]
		public string ActionBySubDepartment
		{
			get
			{
				return this._ActionBySubDepartment;
			}
			set
			{
				if ((this._ActionBySubDepartment != value))
				{
					this.OnActionBySubDepartmentChanging(value);
					this.SendPropertyChanging();
					this._ActionBySubDepartment = value;
					this.SendPropertyChanged("ActionBySubDepartment");
					this.OnActionBySubDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="Date")]
		public System.Nullable<System.DateTime> InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this.OnInsertedOnChanging(value);
					this.SendPropertyChanging();
					this._InsertedOn = value;
					this.SendPropertyChanged("InsertedOn");
					this.OnInsertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOn", DbType="Date")]
		public System.Nullable<System.DateTime> LastModifiedOn
		{
			get
			{
				return this._LastModifiedOn;
			}
			set
			{
				if ((this._LastModifiedOn != value))
				{
					this.OnLastModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOn = value;
					this.SendPropertyChanged("LastModifiedOn");
					this.OnLastModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionNotes", DbType="NVarChar(MAX)")]
		public string ActionNotes
		{
			get
			{
				return this._ActionNotes;
			}
			set
			{
				if ((this._ActionNotes != value))
				{
					this.OnActionNotesChanging(value);
					this.SendPropertyChanging();
					this._ActionNotes = value;
					this.SendPropertyChanged("ActionNotes");
					this.OnActionNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MainCategoryTbl")]
	public partial class MainCategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MainCategoryName;
		
		private string _MainCategoryDescription;
		
		private EntitySet<MinorCategoryTbl> _MinorCategoryTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMainCategoryNameChanging(string value);
    partial void OnMainCategoryNameChanged();
    partial void OnMainCategoryDescriptionChanging(string value);
    partial void OnMainCategoryDescriptionChanged();
    #endregion
		
		public MainCategoryTbl()
		{
			this._MinorCategoryTbls = new EntitySet<MinorCategoryTbl>(new Action<MinorCategoryTbl>(this.attach_MinorCategoryTbls), new Action<MinorCategoryTbl>(this.detach_MinorCategoryTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MainCategoryName
		{
			get
			{
				return this._MainCategoryName;
			}
			set
			{
				if ((this._MainCategoryName != value))
				{
					this.OnMainCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._MainCategoryName = value;
					this.SendPropertyChanged("MainCategoryName");
					this.OnMainCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategoryDescription", DbType="NVarChar(300)")]
		public string MainCategoryDescription
		{
			get
			{
				return this._MainCategoryDescription;
			}
			set
			{
				if ((this._MainCategoryDescription != value))
				{
					this.OnMainCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MainCategoryDescription = value;
					this.SendPropertyChanged("MainCategoryDescription");
					this.OnMainCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MainCategoryTbl_MinorCategoryTbl", Storage="_MinorCategoryTbls", ThisKey="ID", OtherKey="MainCategory")]
		public EntitySet<MinorCategoryTbl> MinorCategoryTbls
		{
			get
			{
				return this._MinorCategoryTbls;
			}
			set
			{
				this._MinorCategoryTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MinorCategoryTbls(MinorCategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.MainCategoryTbl = this;
		}
		
		private void detach_MinorCategoryTbls(MinorCategoryTbl entity)
		{
			this.SendPropertyChanging();
			entity.MainCategoryTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MinorCategoryTbl")]
	public partial class MinorCategoryTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MinorCategoryName;
		
		private string _MinorCategoryDescription;
		
		private int _MainCategory;
		
		private int _ProductiveAgeInYears;
		
		private double _DestructionRate;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
		private EntityRef<MainCategoryTbl> _MainCategoryTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMinorCategoryNameChanging(string value);
    partial void OnMinorCategoryNameChanged();
    partial void OnMinorCategoryDescriptionChanging(string value);
    partial void OnMinorCategoryDescriptionChanged();
    partial void OnMainCategoryChanging(int value);
    partial void OnMainCategoryChanged();
    partial void OnProductiveAgeInYearsChanging(int value);
    partial void OnProductiveAgeInYearsChanged();
    partial void OnDestructionRateChanging(double value);
    partial void OnDestructionRateChanged();
    #endregion
		
		public MinorCategoryTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			this._MainCategoryTbl = default(EntityRef<MainCategoryTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MinorCategoryName
		{
			get
			{
				return this._MinorCategoryName;
			}
			set
			{
				if ((this._MinorCategoryName != value))
				{
					this.OnMinorCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._MinorCategoryName = value;
					this.SendPropertyChanged("MinorCategoryName");
					this.OnMinorCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorCategoryDescription", DbType="NVarChar(300)")]
		public string MinorCategoryDescription
		{
			get
			{
				return this._MinorCategoryDescription;
			}
			set
			{
				if ((this._MinorCategoryDescription != value))
				{
					this.OnMinorCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MinorCategoryDescription = value;
					this.SendPropertyChanged("MinorCategoryDescription");
					this.OnMinorCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategory", DbType="Int NOT NULL")]
		public int MainCategory
		{
			get
			{
				return this._MainCategory;
			}
			set
			{
				if ((this._MainCategory != value))
				{
					if (this._MainCategoryTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainCategoryChanging(value);
					this.SendPropertyChanging();
					this._MainCategory = value;
					this.SendPropertyChanged("MainCategory");
					this.OnMainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductiveAgeInYears", DbType="Int NOT NULL")]
		public int ProductiveAgeInYears
		{
			get
			{
				return this._ProductiveAgeInYears;
			}
			set
			{
				if ((this._ProductiveAgeInYears != value))
				{
					this.OnProductiveAgeInYearsChanging(value);
					this.SendPropertyChanging();
					this._ProductiveAgeInYears = value;
					this.SendPropertyChanged("ProductiveAgeInYears");
					this.OnProductiveAgeInYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestructionRate", DbType="Float NOT NULL")]
		public double DestructionRate
		{
			get
			{
				return this._DestructionRate;
			}
			set
			{
				if ((this._DestructionRate != value))
				{
					this.OnDestructionRateChanging(value);
					this.SendPropertyChanging();
					this._DestructionRate = value;
					this.SendPropertyChanged("DestructionRate");
					this.OnDestructionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MinorCategoryTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="AssetMinorCategory")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MainCategoryTbl_MinorCategoryTbl", Storage="_MainCategoryTbl", ThisKey="MainCategory", OtherKey="ID", IsForeignKey=true)]
		public MainCategoryTbl MainCategoryTbl
		{
			get
			{
				return this._MainCategoryTbl.Entity;
			}
			set
			{
				MainCategoryTbl previousValue = this._MainCategoryTbl.Entity;
				if (((previousValue != value) 
							|| (this._MainCategoryTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MainCategoryTbl.Entity = null;
						previousValue.MinorCategoryTbls.Remove(this);
					}
					this._MainCategoryTbl.Entity = value;
					if ((value != null))
					{
						value.MinorCategoryTbls.Add(this);
						this._MainCategory = value.ID;
					}
					else
					{
						this._MainCategory = default(int);
					}
					this.SendPropertyChanged("MainCategoryTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.MinorCategoryTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.MinorCategoryTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelTbl")]
	public partial class ModelTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ModelNameEn;
		
		private string _ModelNameAr;
		
		private System.Data.Linq.Binary _ModelImg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModelNameEnChanging(string value);
    partial void OnModelNameEnChanged();
    partial void OnModelNameArChanging(string value);
    partial void OnModelNameArChanged();
    partial void OnModelImgChanging(System.Data.Linq.Binary value);
    partial void OnModelImgChanged();
    #endregion
		
		public ModelTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNameEn", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ModelNameEn
		{
			get
			{
				return this._ModelNameEn;
			}
			set
			{
				if ((this._ModelNameEn != value))
				{
					this.OnModelNameEnChanging(value);
					this.SendPropertyChanging();
					this._ModelNameEn = value;
					this.SendPropertyChanged("ModelNameEn");
					this.OnModelNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNameAr", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ModelNameAr
		{
			get
			{
				return this._ModelNameAr;
			}
			set
			{
				if ((this._ModelNameAr != value))
				{
					this.OnModelNameArChanging(value);
					this.SendPropertyChanging();
					this._ModelNameAr = value;
					this.SendPropertyChanged("ModelNameAr");
					this.OnModelNameArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelImg", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ModelImg
		{
			get
			{
				return this._ModelImg;
			}
			set
			{
				if ((this._ModelImg != value))
				{
					this.OnModelImgChanging(value);
					this.SendPropertyChanging();
					this._ModelImg = value;
					this.SendPropertyChanged("ModelImg");
					this.OnModelImgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionsTbl")]
	public partial class OptionsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AssetCodePrefix;
		
		private System.Nullable<int> _ActiveUser;
		
		private int _AssetLifeSpanThresholdToWarn;
		
		private int _ShiftDays;
		
		private int _ShiftSeconds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAssetCodePrefixChanging(string value);
    partial void OnAssetCodePrefixChanged();
    partial void OnActiveUserChanging(System.Nullable<int> value);
    partial void OnActiveUserChanged();
    partial void OnAssetLifeSpanThresholdToWarnChanging(int value);
    partial void OnAssetLifeSpanThresholdToWarnChanged();
    partial void OnShiftDaysChanging(int value);
    partial void OnShiftDaysChanged();
    partial void OnShiftSecondsChanging(int value);
    partial void OnShiftSecondsChanged();
    #endregion
		
		public OptionsTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCodePrefix", DbType="NVarChar(50)")]
		public string AssetCodePrefix
		{
			get
			{
				return this._AssetCodePrefix;
			}
			set
			{
				if ((this._AssetCodePrefix != value))
				{
					this.OnAssetCodePrefixChanging(value);
					this.SendPropertyChanging();
					this._AssetCodePrefix = value;
					this.SendPropertyChanged("AssetCodePrefix");
					this.OnAssetCodePrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveUser", DbType="Int")]
		public System.Nullable<int> ActiveUser
		{
			get
			{
				return this._ActiveUser;
			}
			set
			{
				if ((this._ActiveUser != value))
				{
					this.OnActiveUserChanging(value);
					this.SendPropertyChanging();
					this._ActiveUser = value;
					this.SendPropertyChanged("ActiveUser");
					this.OnActiveUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetLifeSpanThresholdToWarn", DbType="Int NOT NULL")]
		public int AssetLifeSpanThresholdToWarn
		{
			get
			{
				return this._AssetLifeSpanThresholdToWarn;
			}
			set
			{
				if ((this._AssetLifeSpanThresholdToWarn != value))
				{
					this.OnAssetLifeSpanThresholdToWarnChanging(value);
					this.SendPropertyChanging();
					this._AssetLifeSpanThresholdToWarn = value;
					this.SendPropertyChanged("AssetLifeSpanThresholdToWarn");
					this.OnAssetLifeSpanThresholdToWarnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftDays", DbType="Int NOT NULL")]
		public int ShiftDays
		{
			get
			{
				return this._ShiftDays;
			}
			set
			{
				if ((this._ShiftDays != value))
				{
					this.OnShiftDaysChanging(value);
					this.SendPropertyChanging();
					this._ShiftDays = value;
					this.SendPropertyChanged("ShiftDays");
					this.OnShiftDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftSeconds", DbType="Int NOT NULL")]
		public int ShiftSeconds
		{
			get
			{
				return this._ShiftSeconds;
			}
			set
			{
				if ((this._ShiftSeconds != value))
				{
					this.OnShiftSecondsChanging(value);
					this.SendPropertyChanging();
					this._ShiftSeconds = value;
					this.SendPropertyChanged("ShiftSeconds");
					this.OnShiftSecondsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SectionTbl")]
	public partial class SectionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SectionName;
		
		private EntitySet<DepartmentTbl> _DepartmentTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    #endregion
		
		public SectionTbl()
		{
			this._DepartmentTbls = new EntitySet<DepartmentTbl>(new Action<DepartmentTbl>(this.attach_DepartmentTbls), new Action<DepartmentTbl>(this.detach_DepartmentTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SectionTbl_DepartmentTbl", Storage="_DepartmentTbls", ThisKey="ID", OtherKey="SectionOfDepartment")]
		public EntitySet<DepartmentTbl> DepartmentTbls
		{
			get
			{
				return this._DepartmentTbls;
			}
			set
			{
				this._DepartmentTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DepartmentTbls(DepartmentTbl entity)
		{
			this.SendPropertyChanging();
			entity.SectionTbl = this;
		}
		
		private void detach_DepartmentTbls(DepartmentTbl entity)
		{
			this.SendPropertyChanging();
			entity.SectionTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SquareTbl")]
	public partial class SquareTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SquareName;
		
		private string _SquareLocation;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSquareNameChanging(string value);
    partial void OnSquareNameChanged();
    partial void OnSquareLocationChanging(string value);
    partial void OnSquareLocationChanged();
    #endregion
		
		public SquareTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SquareName", DbType="NVarChar(100)")]
		public string SquareName
		{
			get
			{
				return this._SquareName;
			}
			set
			{
				if ((this._SquareName != value))
				{
					this.OnSquareNameChanging(value);
					this.SendPropertyChanging();
					this._SquareName = value;
					this.SendPropertyChanged("SquareName");
					this.OnSquareNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SquareLocation", DbType="NVarChar(100)")]
		public string SquareLocation
		{
			get
			{
				return this._SquareLocation;
			}
			set
			{
				if ((this._SquareLocation != value))
				{
					this.OnSquareLocationChanging(value);
					this.SendPropertyChanging();
					this._SquareLocation = value;
					this.SendPropertyChanged("SquareLocation");
					this.OnSquareLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SquareTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="AssetSquare")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.SquareTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.SquareTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusTbl")]
	public partial class StatusTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public StatusTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="CurrentStatus")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.StatusTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.StatusTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubDepartmentTbl")]
	public partial class SubDepartmentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SubDepartmentName;
		
		private int _MainDepartment;
		
		private EntitySet<AssetTbl> _AssetTbls;
		
		private EntitySet<FinancialItemTbl> _FinancialItemTbls;
		
		private EntityRef<DepartmentTbl> _DepartmentTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubDepartmentNameChanging(string value);
    partial void OnSubDepartmentNameChanged();
    partial void OnMainDepartmentChanging(int value);
    partial void OnMainDepartmentChanged();
    #endregion
		
		public SubDepartmentTbl()
		{
			this._AssetTbls = new EntitySet<AssetTbl>(new Action<AssetTbl>(this.attach_AssetTbls), new Action<AssetTbl>(this.detach_AssetTbls));
			this._FinancialItemTbls = new EntitySet<FinancialItemTbl>(new Action<FinancialItemTbl>(this.attach_FinancialItemTbls), new Action<FinancialItemTbl>(this.detach_FinancialItemTbls));
			this._DepartmentTbl = default(EntityRef<DepartmentTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartmentName
		{
			get
			{
				return this._SubDepartmentName;
			}
			set
			{
				if ((this._SubDepartmentName != value))
				{
					this.OnSubDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._SubDepartmentName = value;
					this.SendPropertyChanged("SubDepartmentName");
					this.OnSubDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDepartment", DbType="Int NOT NULL")]
		public int MainDepartment
		{
			get
			{
				return this._MainDepartment;
			}
			set
			{
				if ((this._MainDepartment != value))
				{
					if (this._DepartmentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainDepartmentChanging(value);
					this.SendPropertyChanging();
					this._MainDepartment = value;
					this.SendPropertyChanged("MainDepartment");
					this.OnMainDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDepartmentTbl_AssetTbl", Storage="_AssetTbls", ThisKey="ID", OtherKey="AssetSubDepartment")]
		public EntitySet<AssetTbl> AssetTbls
		{
			get
			{
				return this._AssetTbls;
			}
			set
			{
				this._AssetTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubDepartmentTbl_FinancialItemTbl", Storage="_FinancialItemTbls", ThisKey="ID", OtherKey="FinancialItemSubDept")]
		public EntitySet<FinancialItemTbl> FinancialItemTbls
		{
			get
			{
				return this._FinancialItemTbls;
			}
			set
			{
				this._FinancialItemTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DepartmentTbl_SubDepartmentTbl", Storage="_DepartmentTbl", ThisKey="MainDepartment", OtherKey="ID", IsForeignKey=true)]
		public DepartmentTbl DepartmentTbl
		{
			get
			{
				return this._DepartmentTbl.Entity;
			}
			set
			{
				DepartmentTbl previousValue = this._DepartmentTbl.Entity;
				if (((previousValue != value) 
							|| (this._DepartmentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartmentTbl.Entity = null;
						previousValue.SubDepartmentTbls.Remove(this);
					}
					this._DepartmentTbl.Entity = value;
					if ((value != null))
					{
						value.SubDepartmentTbls.Add(this);
						this._MainDepartment = value.ID;
					}
					else
					{
						this._MainDepartment = default(int);
					}
					this.SendPropertyChanged("DepartmentTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.SubDepartmentTbl = this;
		}
		
		private void detach_AssetTbls(AssetTbl entity)
		{
			this.SendPropertyChanging();
			entity.SubDepartmentTbl = null;
		}
		
		private void attach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.SubDepartmentTbl = this;
		}
		
		private void detach_FinancialItemTbls(FinancialItemTbl entity)
		{
			this.SendPropertyChanging();
			entity.SubDepartmentTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionTypeTbl")]
	public partial class TransactionTypeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TransactionTypeName;
		
		private EntitySet<AssetTransactionTbl> _AssetTransactionTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionTypeNameChanging(string value);
    partial void OnTransactionTypeNameChanged();
    #endregion
		
		public TransactionTypeTbl()
		{
			this._AssetTransactionTbls = new EntitySet<AssetTransactionTbl>(new Action<AssetTransactionTbl>(this.attach_AssetTransactionTbls), new Action<AssetTransactionTbl>(this.detach_AssetTransactionTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TransactionTypeName
		{
			get
			{
				return this._TransactionTypeName;
			}
			set
			{
				if ((this._TransactionTypeName != value))
				{
					this.OnTransactionTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeName = value;
					this.SendPropertyChanged("TransactionTypeName");
					this.OnTransactionTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionTypeTbl_AssetTransactionTbl", Storage="_AssetTransactionTbls", ThisKey="ID", OtherKey="TransactionType")]
		public EntitySet<AssetTransactionTbl> AssetTransactionTbls
		{
			get
			{
				return this._AssetTransactionTbls;
			}
			set
			{
				this._AssetTransactionTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeTbl = this;
		}
		
		private void detach_AssetTransactionTbls(AssetTransactionTbl entity)
		{
			this.SendPropertyChanging();
			entity.TransactionTypeTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoleTbl")]
	public partial class UserRoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private System.Nullable<bool> _AddNewAsset;
		
		private System.Nullable<bool> _ManageAssetTbl;
		
		private System.Nullable<bool> _UpdateExistedAsset;
		
		private System.Nullable<bool> _UpdateSubDepartmentForExistedAsset;
		
		private System.Nullable<bool> _DeleteAssetRecord;
		
		private System.Nullable<bool> _ViewAssetsReports;
		
		private System.Nullable<bool> _ViewAssetsStats;
		
		private System.Nullable<bool> _CreateInventoryReport;
		
		private System.Nullable<bool> _AddNewAssetMovement;
		
		private System.Nullable<bool> _ManageAssetMovements;
		
		private System.Nullable<bool> _AddNewAssetTransaction;
		
		private System.Nullable<bool> _ManageAssetTransactions;
		
		private System.Nullable<bool> _ExportAllData;
		
		private System.Nullable<bool> _ImportAllData;
		
		private System.Nullable<bool> _ManageImportExportTbl;
		
		private System.Nullable<bool> _ManageUsers;
		
		private System.Nullable<bool> _PromoteDb;
		
		private System.Nullable<bool> _AddNewMainCategory;
		
		private System.Nullable<bool> _ManageMainCategories;
		
		private System.Nullable<bool> _AddNewMinorCategory;
		
		private System.Nullable<bool> _ManageMinorCategories;
		
		private System.Nullable<bool> _AddNewSection;
		
		private System.Nullable<bool> _ManageSections;
		
		private System.Nullable<bool> _AddNewDepartment;
		
		private System.Nullable<bool> _ManageDepartments;
		
		private System.Nullable<bool> _AddNewSubDepartment;
		
		private System.Nullable<bool> _ManageSubDepartments;
		
		private System.Nullable<bool> _AddNewSquare;
		
		private System.Nullable<bool> _ManageSquares;
		
		private System.Nullable<bool> _AddNewCurrency;
		
		private System.Nullable<bool> _ManageCurrencies;
		
		private System.Nullable<bool> _AddNewModel;
		
		private System.Nullable<bool> _ManageModels;
		
		private System.Nullable<bool> _AddNewEstateAreaUnit;
		
		private System.Nullable<bool> _ManageEstateAreaUnits;
		
		private System.Nullable<bool> _AddNewTransactionType;
		
		private System.Nullable<bool> _ManageTransactionTypes;
		
		private System.Nullable<bool> _AddNewFinancialItem;
		
		private System.Nullable<bool> _ManageFinancialItems;
		
		private System.Nullable<bool> _UpdateExistedFinancialItem;
		
		private System.Nullable<bool> _DeleteFinancialItemRecord;
		
		private System.Nullable<bool> _ViewFinancialReports;
		
		private System.Nullable<bool> _AddNewFinancialItemCategory;
		
		private System.Nullable<bool> _ManageFinancialItemCategories;
		
		private System.Nullable<bool> _SetDateAndTime;
		
		private System.Nullable<bool> _BackupDb;
		
		private System.Nullable<bool> _RestoreDb;
		
		private System.Nullable<bool> _CreateAssetsReports;
		
		private System.Nullable<bool> _IsSectionIndependent;
		
		private System.Nullable<bool> _IsDepartmentIndependent;
		
		private EntitySet<UserTbl> _UserTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnAddNewAssetChanging(System.Nullable<bool> value);
    partial void OnAddNewAssetChanged();
    partial void OnManageAssetTblChanging(System.Nullable<bool> value);
    partial void OnManageAssetTblChanged();
    partial void OnUpdateExistedAssetChanging(System.Nullable<bool> value);
    partial void OnUpdateExistedAssetChanged();
    partial void OnUpdateSubDepartmentForExistedAssetChanging(System.Nullable<bool> value);
    partial void OnUpdateSubDepartmentForExistedAssetChanged();
    partial void OnDeleteAssetRecordChanging(System.Nullable<bool> value);
    partial void OnDeleteAssetRecordChanged();
    partial void OnViewAssetsReportsChanging(System.Nullable<bool> value);
    partial void OnViewAssetsReportsChanged();
    partial void OnViewAssetsStatsChanging(System.Nullable<bool> value);
    partial void OnViewAssetsStatsChanged();
    partial void OnCreateInventoryReportChanging(System.Nullable<bool> value);
    partial void OnCreateInventoryReportChanged();
    partial void OnAddNewAssetMovementChanging(System.Nullable<bool> value);
    partial void OnAddNewAssetMovementChanged();
    partial void OnManageAssetMovementsChanging(System.Nullable<bool> value);
    partial void OnManageAssetMovementsChanged();
    partial void OnAddNewAssetTransactionChanging(System.Nullable<bool> value);
    partial void OnAddNewAssetTransactionChanged();
    partial void OnManageAssetTransactionsChanging(System.Nullable<bool> value);
    partial void OnManageAssetTransactionsChanged();
    partial void OnExportAllDataChanging(System.Nullable<bool> value);
    partial void OnExportAllDataChanged();
    partial void OnImportAllDataChanging(System.Nullable<bool> value);
    partial void OnImportAllDataChanged();
    partial void OnManageImportExportTblChanging(System.Nullable<bool> value);
    partial void OnManageImportExportTblChanged();
    partial void OnManageUsersChanging(System.Nullable<bool> value);
    partial void OnManageUsersChanged();
    partial void OnPromoteDbChanging(System.Nullable<bool> value);
    partial void OnPromoteDbChanged();
    partial void OnAddNewMainCategoryChanging(System.Nullable<bool> value);
    partial void OnAddNewMainCategoryChanged();
    partial void OnManageMainCategoriesChanging(System.Nullable<bool> value);
    partial void OnManageMainCategoriesChanged();
    partial void OnAddNewMinorCategoryChanging(System.Nullable<bool> value);
    partial void OnAddNewMinorCategoryChanged();
    partial void OnManageMinorCategoriesChanging(System.Nullable<bool> value);
    partial void OnManageMinorCategoriesChanged();
    partial void OnAddNewSectionChanging(System.Nullable<bool> value);
    partial void OnAddNewSectionChanged();
    partial void OnManageSectionsChanging(System.Nullable<bool> value);
    partial void OnManageSectionsChanged();
    partial void OnAddNewDepartmentChanging(System.Nullable<bool> value);
    partial void OnAddNewDepartmentChanged();
    partial void OnManageDepartmentsChanging(System.Nullable<bool> value);
    partial void OnManageDepartmentsChanged();
    partial void OnAddNewSubDepartmentChanging(System.Nullable<bool> value);
    partial void OnAddNewSubDepartmentChanged();
    partial void OnManageSubDepartmentsChanging(System.Nullable<bool> value);
    partial void OnManageSubDepartmentsChanged();
    partial void OnAddNewSquareChanging(System.Nullable<bool> value);
    partial void OnAddNewSquareChanged();
    partial void OnManageSquaresChanging(System.Nullable<bool> value);
    partial void OnManageSquaresChanged();
    partial void OnAddNewCurrencyChanging(System.Nullable<bool> value);
    partial void OnAddNewCurrencyChanged();
    partial void OnManageCurrenciesChanging(System.Nullable<bool> value);
    partial void OnManageCurrenciesChanged();
    partial void OnAddNewModelChanging(System.Nullable<bool> value);
    partial void OnAddNewModelChanged();
    partial void OnManageModelsChanging(System.Nullable<bool> value);
    partial void OnManageModelsChanged();
    partial void OnAddNewEstateAreaUnitChanging(System.Nullable<bool> value);
    partial void OnAddNewEstateAreaUnitChanged();
    partial void OnManageEstateAreaUnitsChanging(System.Nullable<bool> value);
    partial void OnManageEstateAreaUnitsChanged();
    partial void OnAddNewTransactionTypeChanging(System.Nullable<bool> value);
    partial void OnAddNewTransactionTypeChanged();
    partial void OnManageTransactionTypesChanging(System.Nullable<bool> value);
    partial void OnManageTransactionTypesChanged();
    partial void OnAddNewFinancialItemChanging(System.Nullable<bool> value);
    partial void OnAddNewFinancialItemChanged();
    partial void OnManageFinancialItemsChanging(System.Nullable<bool> value);
    partial void OnManageFinancialItemsChanged();
    partial void OnUpdateExistedFinancialItemChanging(System.Nullable<bool> value);
    partial void OnUpdateExistedFinancialItemChanged();
    partial void OnDeleteFinancialItemRecordChanging(System.Nullable<bool> value);
    partial void OnDeleteFinancialItemRecordChanged();
    partial void OnViewFinancialReportsChanging(System.Nullable<bool> value);
    partial void OnViewFinancialReportsChanged();
    partial void OnAddNewFinancialItemCategoryChanging(System.Nullable<bool> value);
    partial void OnAddNewFinancialItemCategoryChanged();
    partial void OnManageFinancialItemCategoriesChanging(System.Nullable<bool> value);
    partial void OnManageFinancialItemCategoriesChanged();
    partial void OnSetDateAndTimeChanging(System.Nullable<bool> value);
    partial void OnSetDateAndTimeChanged();
    partial void OnBackupDbChanging(System.Nullable<bool> value);
    partial void OnBackupDbChanged();
    partial void OnRestoreDbChanging(System.Nullable<bool> value);
    partial void OnRestoreDbChanged();
    partial void OnCreateAssetsReportsChanging(System.Nullable<bool> value);
    partial void OnCreateAssetsReportsChanged();
    partial void OnIsSectionIndependentChanging(System.Nullable<bool> value);
    partial void OnIsSectionIndependentChanged();
    partial void OnIsDepartmentIndependentChanging(System.Nullable<bool> value);
    partial void OnIsDepartmentIndependentChanged();
    #endregion
		
		public UserRoleTbl()
		{
			this._UserTbls = new EntitySet<UserTbl>(new Action<UserTbl>(this.attach_UserTbls), new Action<UserTbl>(this.detach_UserTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewAsset", DbType="Bit")]
		public System.Nullable<bool> AddNewAsset
		{
			get
			{
				return this._AddNewAsset;
			}
			set
			{
				if ((this._AddNewAsset != value))
				{
					this.OnAddNewAssetChanging(value);
					this.SendPropertyChanging();
					this._AddNewAsset = value;
					this.SendPropertyChanged("AddNewAsset");
					this.OnAddNewAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageAssetTbl", DbType="Bit")]
		public System.Nullable<bool> ManageAssetTbl
		{
			get
			{
				return this._ManageAssetTbl;
			}
			set
			{
				if ((this._ManageAssetTbl != value))
				{
					this.OnManageAssetTblChanging(value);
					this.SendPropertyChanging();
					this._ManageAssetTbl = value;
					this.SendPropertyChanged("ManageAssetTbl");
					this.OnManageAssetTblChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateExistedAsset", DbType="Bit")]
		public System.Nullable<bool> UpdateExistedAsset
		{
			get
			{
				return this._UpdateExistedAsset;
			}
			set
			{
				if ((this._UpdateExistedAsset != value))
				{
					this.OnUpdateExistedAssetChanging(value);
					this.SendPropertyChanging();
					this._UpdateExistedAsset = value;
					this.SendPropertyChanged("UpdateExistedAsset");
					this.OnUpdateExistedAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateSubDepartmentForExistedAsset", DbType="Bit")]
		public System.Nullable<bool> UpdateSubDepartmentForExistedAsset
		{
			get
			{
				return this._UpdateSubDepartmentForExistedAsset;
			}
			set
			{
				if ((this._UpdateSubDepartmentForExistedAsset != value))
				{
					this.OnUpdateSubDepartmentForExistedAssetChanging(value);
					this.SendPropertyChanging();
					this._UpdateSubDepartmentForExistedAsset = value;
					this.SendPropertyChanged("UpdateSubDepartmentForExistedAsset");
					this.OnUpdateSubDepartmentForExistedAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteAssetRecord", DbType="Bit")]
		public System.Nullable<bool> DeleteAssetRecord
		{
			get
			{
				return this._DeleteAssetRecord;
			}
			set
			{
				if ((this._DeleteAssetRecord != value))
				{
					this.OnDeleteAssetRecordChanging(value);
					this.SendPropertyChanging();
					this._DeleteAssetRecord = value;
					this.SendPropertyChanged("DeleteAssetRecord");
					this.OnDeleteAssetRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewAssetsReports", DbType="Bit")]
		public System.Nullable<bool> ViewAssetsReports
		{
			get
			{
				return this._ViewAssetsReports;
			}
			set
			{
				if ((this._ViewAssetsReports != value))
				{
					this.OnViewAssetsReportsChanging(value);
					this.SendPropertyChanging();
					this._ViewAssetsReports = value;
					this.SendPropertyChanged("ViewAssetsReports");
					this.OnViewAssetsReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewAssetsStats", DbType="Bit")]
		public System.Nullable<bool> ViewAssetsStats
		{
			get
			{
				return this._ViewAssetsStats;
			}
			set
			{
				if ((this._ViewAssetsStats != value))
				{
					this.OnViewAssetsStatsChanging(value);
					this.SendPropertyChanging();
					this._ViewAssetsStats = value;
					this.SendPropertyChanged("ViewAssetsStats");
					this.OnViewAssetsStatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateInventoryReport", DbType="Bit")]
		public System.Nullable<bool> CreateInventoryReport
		{
			get
			{
				return this._CreateInventoryReport;
			}
			set
			{
				if ((this._CreateInventoryReport != value))
				{
					this.OnCreateInventoryReportChanging(value);
					this.SendPropertyChanging();
					this._CreateInventoryReport = value;
					this.SendPropertyChanged("CreateInventoryReport");
					this.OnCreateInventoryReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewAssetMovement", DbType="Bit")]
		public System.Nullable<bool> AddNewAssetMovement
		{
			get
			{
				return this._AddNewAssetMovement;
			}
			set
			{
				if ((this._AddNewAssetMovement != value))
				{
					this.OnAddNewAssetMovementChanging(value);
					this.SendPropertyChanging();
					this._AddNewAssetMovement = value;
					this.SendPropertyChanged("AddNewAssetMovement");
					this.OnAddNewAssetMovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageAssetMovements", DbType="Bit")]
		public System.Nullable<bool> ManageAssetMovements
		{
			get
			{
				return this._ManageAssetMovements;
			}
			set
			{
				if ((this._ManageAssetMovements != value))
				{
					this.OnManageAssetMovementsChanging(value);
					this.SendPropertyChanging();
					this._ManageAssetMovements = value;
					this.SendPropertyChanged("ManageAssetMovements");
					this.OnManageAssetMovementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewAssetTransaction", DbType="Bit")]
		public System.Nullable<bool> AddNewAssetTransaction
		{
			get
			{
				return this._AddNewAssetTransaction;
			}
			set
			{
				if ((this._AddNewAssetTransaction != value))
				{
					this.OnAddNewAssetTransactionChanging(value);
					this.SendPropertyChanging();
					this._AddNewAssetTransaction = value;
					this.SendPropertyChanged("AddNewAssetTransaction");
					this.OnAddNewAssetTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageAssetTransactions", DbType="Bit")]
		public System.Nullable<bool> ManageAssetTransactions
		{
			get
			{
				return this._ManageAssetTransactions;
			}
			set
			{
				if ((this._ManageAssetTransactions != value))
				{
					this.OnManageAssetTransactionsChanging(value);
					this.SendPropertyChanging();
					this._ManageAssetTransactions = value;
					this.SendPropertyChanged("ManageAssetTransactions");
					this.OnManageAssetTransactionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportAllData", DbType="Bit")]
		public System.Nullable<bool> ExportAllData
		{
			get
			{
				return this._ExportAllData;
			}
			set
			{
				if ((this._ExportAllData != value))
				{
					this.OnExportAllDataChanging(value);
					this.SendPropertyChanging();
					this._ExportAllData = value;
					this.SendPropertyChanged("ExportAllData");
					this.OnExportAllDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportAllData", DbType="Bit")]
		public System.Nullable<bool> ImportAllData
		{
			get
			{
				return this._ImportAllData;
			}
			set
			{
				if ((this._ImportAllData != value))
				{
					this.OnImportAllDataChanging(value);
					this.SendPropertyChanging();
					this._ImportAllData = value;
					this.SendPropertyChanged("ImportAllData");
					this.OnImportAllDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageImportExportTbl", DbType="Bit")]
		public System.Nullable<bool> ManageImportExportTbl
		{
			get
			{
				return this._ManageImportExportTbl;
			}
			set
			{
				if ((this._ManageImportExportTbl != value))
				{
					this.OnManageImportExportTblChanging(value);
					this.SendPropertyChanging();
					this._ManageImportExportTbl = value;
					this.SendPropertyChanged("ManageImportExportTbl");
					this.OnManageImportExportTblChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageUsers", DbType="Bit")]
		public System.Nullable<bool> ManageUsers
		{
			get
			{
				return this._ManageUsers;
			}
			set
			{
				if ((this._ManageUsers != value))
				{
					this.OnManageUsersChanging(value);
					this.SendPropertyChanging();
					this._ManageUsers = value;
					this.SendPropertyChanged("ManageUsers");
					this.OnManageUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoteDb", DbType="Bit")]
		public System.Nullable<bool> PromoteDb
		{
			get
			{
				return this._PromoteDb;
			}
			set
			{
				if ((this._PromoteDb != value))
				{
					this.OnPromoteDbChanging(value);
					this.SendPropertyChanging();
					this._PromoteDb = value;
					this.SendPropertyChanged("PromoteDb");
					this.OnPromoteDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewMainCategory", DbType="Bit")]
		public System.Nullable<bool> AddNewMainCategory
		{
			get
			{
				return this._AddNewMainCategory;
			}
			set
			{
				if ((this._AddNewMainCategory != value))
				{
					this.OnAddNewMainCategoryChanging(value);
					this.SendPropertyChanging();
					this._AddNewMainCategory = value;
					this.SendPropertyChanged("AddNewMainCategory");
					this.OnAddNewMainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageMainCategories", DbType="Bit")]
		public System.Nullable<bool> ManageMainCategories
		{
			get
			{
				return this._ManageMainCategories;
			}
			set
			{
				if ((this._ManageMainCategories != value))
				{
					this.OnManageMainCategoriesChanging(value);
					this.SendPropertyChanging();
					this._ManageMainCategories = value;
					this.SendPropertyChanged("ManageMainCategories");
					this.OnManageMainCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewMinorCategory", DbType="Bit")]
		public System.Nullable<bool> AddNewMinorCategory
		{
			get
			{
				return this._AddNewMinorCategory;
			}
			set
			{
				if ((this._AddNewMinorCategory != value))
				{
					this.OnAddNewMinorCategoryChanging(value);
					this.SendPropertyChanging();
					this._AddNewMinorCategory = value;
					this.SendPropertyChanged("AddNewMinorCategory");
					this.OnAddNewMinorCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageMinorCategories", DbType="Bit")]
		public System.Nullable<bool> ManageMinorCategories
		{
			get
			{
				return this._ManageMinorCategories;
			}
			set
			{
				if ((this._ManageMinorCategories != value))
				{
					this.OnManageMinorCategoriesChanging(value);
					this.SendPropertyChanging();
					this._ManageMinorCategories = value;
					this.SendPropertyChanged("ManageMinorCategories");
					this.OnManageMinorCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewSection", DbType="Bit")]
		public System.Nullable<bool> AddNewSection
		{
			get
			{
				return this._AddNewSection;
			}
			set
			{
				if ((this._AddNewSection != value))
				{
					this.OnAddNewSectionChanging(value);
					this.SendPropertyChanging();
					this._AddNewSection = value;
					this.SendPropertyChanged("AddNewSection");
					this.OnAddNewSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageSections", DbType="Bit")]
		public System.Nullable<bool> ManageSections
		{
			get
			{
				return this._ManageSections;
			}
			set
			{
				if ((this._ManageSections != value))
				{
					this.OnManageSectionsChanging(value);
					this.SendPropertyChanging();
					this._ManageSections = value;
					this.SendPropertyChanged("ManageSections");
					this.OnManageSectionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewDepartment", DbType="Bit")]
		public System.Nullable<bool> AddNewDepartment
		{
			get
			{
				return this._AddNewDepartment;
			}
			set
			{
				if ((this._AddNewDepartment != value))
				{
					this.OnAddNewDepartmentChanging(value);
					this.SendPropertyChanging();
					this._AddNewDepartment = value;
					this.SendPropertyChanged("AddNewDepartment");
					this.OnAddNewDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageDepartments", DbType="Bit")]
		public System.Nullable<bool> ManageDepartments
		{
			get
			{
				return this._ManageDepartments;
			}
			set
			{
				if ((this._ManageDepartments != value))
				{
					this.OnManageDepartmentsChanging(value);
					this.SendPropertyChanging();
					this._ManageDepartments = value;
					this.SendPropertyChanged("ManageDepartments");
					this.OnManageDepartmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewSubDepartment", DbType="Bit")]
		public System.Nullable<bool> AddNewSubDepartment
		{
			get
			{
				return this._AddNewSubDepartment;
			}
			set
			{
				if ((this._AddNewSubDepartment != value))
				{
					this.OnAddNewSubDepartmentChanging(value);
					this.SendPropertyChanging();
					this._AddNewSubDepartment = value;
					this.SendPropertyChanged("AddNewSubDepartment");
					this.OnAddNewSubDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageSubDepartments", DbType="Bit")]
		public System.Nullable<bool> ManageSubDepartments
		{
			get
			{
				return this._ManageSubDepartments;
			}
			set
			{
				if ((this._ManageSubDepartments != value))
				{
					this.OnManageSubDepartmentsChanging(value);
					this.SendPropertyChanging();
					this._ManageSubDepartments = value;
					this.SendPropertyChanged("ManageSubDepartments");
					this.OnManageSubDepartmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewSquare", DbType="Bit")]
		public System.Nullable<bool> AddNewSquare
		{
			get
			{
				return this._AddNewSquare;
			}
			set
			{
				if ((this._AddNewSquare != value))
				{
					this.OnAddNewSquareChanging(value);
					this.SendPropertyChanging();
					this._AddNewSquare = value;
					this.SendPropertyChanged("AddNewSquare");
					this.OnAddNewSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageSquares", DbType="Bit")]
		public System.Nullable<bool> ManageSquares
		{
			get
			{
				return this._ManageSquares;
			}
			set
			{
				if ((this._ManageSquares != value))
				{
					this.OnManageSquaresChanging(value);
					this.SendPropertyChanging();
					this._ManageSquares = value;
					this.SendPropertyChanged("ManageSquares");
					this.OnManageSquaresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewCurrency", DbType="Bit")]
		public System.Nullable<bool> AddNewCurrency
		{
			get
			{
				return this._AddNewCurrency;
			}
			set
			{
				if ((this._AddNewCurrency != value))
				{
					this.OnAddNewCurrencyChanging(value);
					this.SendPropertyChanging();
					this._AddNewCurrency = value;
					this.SendPropertyChanged("AddNewCurrency");
					this.OnAddNewCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageCurrencies", DbType="Bit")]
		public System.Nullable<bool> ManageCurrencies
		{
			get
			{
				return this._ManageCurrencies;
			}
			set
			{
				if ((this._ManageCurrencies != value))
				{
					this.OnManageCurrenciesChanging(value);
					this.SendPropertyChanging();
					this._ManageCurrencies = value;
					this.SendPropertyChanged("ManageCurrencies");
					this.OnManageCurrenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewModel", DbType="Bit")]
		public System.Nullable<bool> AddNewModel
		{
			get
			{
				return this._AddNewModel;
			}
			set
			{
				if ((this._AddNewModel != value))
				{
					this.OnAddNewModelChanging(value);
					this.SendPropertyChanging();
					this._AddNewModel = value;
					this.SendPropertyChanged("AddNewModel");
					this.OnAddNewModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageModels", DbType="Bit")]
		public System.Nullable<bool> ManageModels
		{
			get
			{
				return this._ManageModels;
			}
			set
			{
				if ((this._ManageModels != value))
				{
					this.OnManageModelsChanging(value);
					this.SendPropertyChanging();
					this._ManageModels = value;
					this.SendPropertyChanged("ManageModels");
					this.OnManageModelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewEstateAreaUnit", DbType="Bit")]
		public System.Nullable<bool> AddNewEstateAreaUnit
		{
			get
			{
				return this._AddNewEstateAreaUnit;
			}
			set
			{
				if ((this._AddNewEstateAreaUnit != value))
				{
					this.OnAddNewEstateAreaUnitChanging(value);
					this.SendPropertyChanging();
					this._AddNewEstateAreaUnit = value;
					this.SendPropertyChanged("AddNewEstateAreaUnit");
					this.OnAddNewEstateAreaUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageEstateAreaUnits", DbType="Bit")]
		public System.Nullable<bool> ManageEstateAreaUnits
		{
			get
			{
				return this._ManageEstateAreaUnits;
			}
			set
			{
				if ((this._ManageEstateAreaUnits != value))
				{
					this.OnManageEstateAreaUnitsChanging(value);
					this.SendPropertyChanging();
					this._ManageEstateAreaUnits = value;
					this.SendPropertyChanged("ManageEstateAreaUnits");
					this.OnManageEstateAreaUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewTransactionType", DbType="Bit")]
		public System.Nullable<bool> AddNewTransactionType
		{
			get
			{
				return this._AddNewTransactionType;
			}
			set
			{
				if ((this._AddNewTransactionType != value))
				{
					this.OnAddNewTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._AddNewTransactionType = value;
					this.SendPropertyChanged("AddNewTransactionType");
					this.OnAddNewTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageTransactionTypes", DbType="Bit")]
		public System.Nullable<bool> ManageTransactionTypes
		{
			get
			{
				return this._ManageTransactionTypes;
			}
			set
			{
				if ((this._ManageTransactionTypes != value))
				{
					this.OnManageTransactionTypesChanging(value);
					this.SendPropertyChanging();
					this._ManageTransactionTypes = value;
					this.SendPropertyChanged("ManageTransactionTypes");
					this.OnManageTransactionTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewFinancialItem", DbType="Bit")]
		public System.Nullable<bool> AddNewFinancialItem
		{
			get
			{
				return this._AddNewFinancialItem;
			}
			set
			{
				if ((this._AddNewFinancialItem != value))
				{
					this.OnAddNewFinancialItemChanging(value);
					this.SendPropertyChanging();
					this._AddNewFinancialItem = value;
					this.SendPropertyChanged("AddNewFinancialItem");
					this.OnAddNewFinancialItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageFinancialItems", DbType="Bit")]
		public System.Nullable<bool> ManageFinancialItems
		{
			get
			{
				return this._ManageFinancialItems;
			}
			set
			{
				if ((this._ManageFinancialItems != value))
				{
					this.OnManageFinancialItemsChanging(value);
					this.SendPropertyChanging();
					this._ManageFinancialItems = value;
					this.SendPropertyChanged("ManageFinancialItems");
					this.OnManageFinancialItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateExistedFinancialItem", DbType="Bit")]
		public System.Nullable<bool> UpdateExistedFinancialItem
		{
			get
			{
				return this._UpdateExistedFinancialItem;
			}
			set
			{
				if ((this._UpdateExistedFinancialItem != value))
				{
					this.OnUpdateExistedFinancialItemChanging(value);
					this.SendPropertyChanging();
					this._UpdateExistedFinancialItem = value;
					this.SendPropertyChanged("UpdateExistedFinancialItem");
					this.OnUpdateExistedFinancialItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFinancialItemRecord", DbType="Bit")]
		public System.Nullable<bool> DeleteFinancialItemRecord
		{
			get
			{
				return this._DeleteFinancialItemRecord;
			}
			set
			{
				if ((this._DeleteFinancialItemRecord != value))
				{
					this.OnDeleteFinancialItemRecordChanging(value);
					this.SendPropertyChanging();
					this._DeleteFinancialItemRecord = value;
					this.SendPropertyChanged("DeleteFinancialItemRecord");
					this.OnDeleteFinancialItemRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewFinancialReports", DbType="Bit")]
		public System.Nullable<bool> ViewFinancialReports
		{
			get
			{
				return this._ViewFinancialReports;
			}
			set
			{
				if ((this._ViewFinancialReports != value))
				{
					this.OnViewFinancialReportsChanging(value);
					this.SendPropertyChanging();
					this._ViewFinancialReports = value;
					this.SendPropertyChanged("ViewFinancialReports");
					this.OnViewFinancialReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewFinancialItemCategory", DbType="Bit")]
		public System.Nullable<bool> AddNewFinancialItemCategory
		{
			get
			{
				return this._AddNewFinancialItemCategory;
			}
			set
			{
				if ((this._AddNewFinancialItemCategory != value))
				{
					this.OnAddNewFinancialItemCategoryChanging(value);
					this.SendPropertyChanging();
					this._AddNewFinancialItemCategory = value;
					this.SendPropertyChanged("AddNewFinancialItemCategory");
					this.OnAddNewFinancialItemCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageFinancialItemCategories", DbType="Bit")]
		public System.Nullable<bool> ManageFinancialItemCategories
		{
			get
			{
				return this._ManageFinancialItemCategories;
			}
			set
			{
				if ((this._ManageFinancialItemCategories != value))
				{
					this.OnManageFinancialItemCategoriesChanging(value);
					this.SendPropertyChanging();
					this._ManageFinancialItemCategories = value;
					this.SendPropertyChanged("ManageFinancialItemCategories");
					this.OnManageFinancialItemCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetDateAndTime", DbType="Bit")]
		public System.Nullable<bool> SetDateAndTime
		{
			get
			{
				return this._SetDateAndTime;
			}
			set
			{
				if ((this._SetDateAndTime != value))
				{
					this.OnSetDateAndTimeChanging(value);
					this.SendPropertyChanging();
					this._SetDateAndTime = value;
					this.SendPropertyChanged("SetDateAndTime");
					this.OnSetDateAndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupDb", DbType="Bit")]
		public System.Nullable<bool> BackupDb
		{
			get
			{
				return this._BackupDb;
			}
			set
			{
				if ((this._BackupDb != value))
				{
					this.OnBackupDbChanging(value);
					this.SendPropertyChanging();
					this._BackupDb = value;
					this.SendPropertyChanged("BackupDb");
					this.OnBackupDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestoreDb", DbType="Bit")]
		public System.Nullable<bool> RestoreDb
		{
			get
			{
				return this._RestoreDb;
			}
			set
			{
				if ((this._RestoreDb != value))
				{
					this.OnRestoreDbChanging(value);
					this.SendPropertyChanging();
					this._RestoreDb = value;
					this.SendPropertyChanged("RestoreDb");
					this.OnRestoreDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAssetsReports", DbType="Bit")]
		public System.Nullable<bool> CreateAssetsReports
		{
			get
			{
				return this._CreateAssetsReports;
			}
			set
			{
				if ((this._CreateAssetsReports != value))
				{
					this.OnCreateAssetsReportsChanging(value);
					this.SendPropertyChanging();
					this._CreateAssetsReports = value;
					this.SendPropertyChanged("CreateAssetsReports");
					this.OnCreateAssetsReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSectionIndependent", DbType="Bit")]
		public System.Nullable<bool> IsSectionIndependent
		{
			get
			{
				return this._IsSectionIndependent;
			}
			set
			{
				if ((this._IsSectionIndependent != value))
				{
					this.OnIsSectionIndependentChanging(value);
					this.SendPropertyChanging();
					this._IsSectionIndependent = value;
					this.SendPropertyChanged("IsSectionIndependent");
					this.OnIsSectionIndependentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDepartmentIndependent", DbType="Bit")]
		public System.Nullable<bool> IsDepartmentIndependent
		{
			get
			{
				return this._IsDepartmentIndependent;
			}
			set
			{
				if ((this._IsDepartmentIndependent != value))
				{
					this.OnIsDepartmentIndependentChanging(value);
					this.SendPropertyChanging();
					this._IsDepartmentIndependent = value;
					this.SendPropertyChanged("IsDepartmentIndependent");
					this.OnIsDepartmentIndependentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleTbl_UserTbl", Storage="_UserTbls", ThisKey="ID", OtherKey="UserRole")]
		public EntitySet<UserTbl> UserTbls
		{
			get
			{
				return this._UserTbls;
			}
			set
			{
				this._UserTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTbls(UserTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleTbl = this;
		}
		
		private void detach_UserTbls(UserTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetMoveVw")]
	public partial class AssetMoveVw
	{
		
		private int _ID;
		
		private string _MainCategoryName;
		
		private string _MinorCategoryName;
		
		private string _AssetCode;
		
		private string _SectionName;
		
		private string _DepartmentName;
		
		private string _SubDepartmentName;
		
		private string _SquareName;
		
		private string _StatusName;
		
		private string _CustodianName;
		
		private System.Nullable<System.DateTime> _تاريخ_الإدخال;
		
		public AssetMoveVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MainCategoryName
		{
			get
			{
				return this._MainCategoryName;
			}
			set
			{
				if ((this._MainCategoryName != value))
				{
					this._MainCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MinorCategoryName
		{
			get
			{
				return this._MinorCategoryName;
			}
			set
			{
				if ((this._MinorCategoryName != value))
				{
					this._MinorCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCode", DbType="NVarChar(100)")]
		public string AssetCode
		{
			get
			{
				return this._AssetCode;
			}
			set
			{
				if ((this._AssetCode != value))
				{
					this._AssetCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this._SectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubDepartmentName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SubDepartmentName
		{
			get
			{
				return this._SubDepartmentName;
			}
			set
			{
				if ((this._SubDepartmentName != value))
				{
					this._SubDepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SquareName", DbType="NVarChar(100)")]
		public string SquareName
		{
			get
			{
				return this._SquareName;
			}
			set
			{
				if ((this._SquareName != value))
				{
					this._SquareName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustodianName", DbType="NVarChar(50)")]
		public string CustodianName
		{
			get
			{
				return this._CustodianName;
			}
			set
			{
				if ((this._CustodianName != value))
				{
					this._CustodianName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ الإدخال]", Storage="_تاريخ_الإدخال", DbType="Date")]
		public System.Nullable<System.DateTime> تاريخ_الإدخال
		{
			get
			{
				return this._تاريخ_الإدخال;
			}
			set
			{
				if ((this._تاريخ_الإدخال != value))
				{
					this._تاريخ_الإدخال = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubDepartmentVw")]
	public partial class SubDepartmentVw
	{
		
		private int _معرف_الوحدة;
		
		private string _اسم_الوحدة;
		
		private string _القسم_التابعة_له;
		
		private string _الدائرة_التي_يتبع_لها_القسم;
		
		public SubDepartmentVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف الوحدة]", Storage="_معرف_الوحدة", DbType="Int NOT NULL")]
		public int معرف_الوحدة
		{
			get
			{
				return this._معرف_الوحدة;
			}
			set
			{
				if ((this._معرف_الوحدة != value))
				{
					this._معرف_الوحدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الوحدة]", Storage="_اسم_الوحدة", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string اسم_الوحدة
		{
			get
			{
				return this._اسم_الوحدة;
			}
			set
			{
				if ((this._اسم_الوحدة != value))
				{
					this._اسم_الوحدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[القسم التابعة له]", Storage="_القسم_التابعة_له", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string القسم_التابعة_له
		{
			get
			{
				return this._القسم_التابعة_له;
			}
			set
			{
				if ((this._القسم_التابعة_له != value))
				{
					this._القسم_التابعة_له = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الدائرة التي يتبع لها القسم]", Storage="_الدائرة_التي_يتبع_لها_القسم", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الدائرة_التي_يتبع_لها_القسم
		{
			get
			{
				return this._الدائرة_التي_يتبع_لها_القسم;
			}
			set
			{
				if ((this._الدائرة_التي_يتبع_لها_القسم != value))
				{
					this._الدائرة_التي_يتبع_لها_القسم = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetVw")]
	public partial class AssetVw
	{
		
		private int _معرف_الأصل;
		
		private string _كود_الأصل;
		
		private int _العدد;
		
		private string _الدائرة;
		
		private string _القسم;
		
		private string _الوحدة;
		
		private string _الساحة;
		
		private string _الفئة_الرئيسية;
		
		private string _الفئة_الفرعية;
		
		private string _مواصفات_الأصل;
		
		private string _الموديل;
		
		private string _اللون;
		
		private string _الحجم___السعة;
		
		private System.Nullable<System.DateTime> _تاريخ_الشراء;
		
		private System.Nullable<double> _سعر_الشراء;
		
		private string _عملة_سعر_الشراء;
		
		private string _مكان_التواجد;
		
		private string _حالة_الأصل_الآنية;
		
		private string _نسبة_الاستفادة_منه;
		
		private double _السعر_الفعلي_الحالي;
		
		private string _عملة_السعر_الفعلي_الحالي;
		
		private string _اسم_صاحب_العهدة;
		
		private string _تفاصيل_إضافية;
		
		private string _ملاحظات_أخرى;
		
		private string _عنوان_العقار;
		
		private string _اسم_المالك;
		
		private string _المستغل_منه;
		
		private string _مع_من_ورقة_الملكية;
		
		private string _مساحة_العقار;
		
		private string _وحدة_مساحة_العقار;
		
		private string _رقم_لوحة_المركبة;
		
		private System.Nullable<int> _سنة_صنع_المركبة;
		
		private string _رقم_الهيكل__الشاصيه__للمركبة;
		
		private string _رقم_المحرك_للمركبة;
		
		private double _معدل_الإهلاك_للأصل;
		
		private string _العمر_الافتراضي_المتبقي_للأصل;
		
		private System.Nullable<System.DateTime> _تاريخ_الإدخال;
		
		public AssetVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف الأصل]", Storage="_معرف_الأصل", DbType="Int NOT NULL")]
		public int معرف_الأصل
		{
			get
			{
				return this._معرف_الأصل;
			}
			set
			{
				if ((this._معرف_الأصل != value))
				{
					this._معرف_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[كود الأصل]", Storage="_كود_الأصل", DbType="NVarChar(100)")]
		public string كود_الأصل
		{
			get
			{
				return this._كود_الأصل;
			}
			set
			{
				if ((this._كود_الأصل != value))
				{
					this._كود_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العدد", DbType="Int NOT NULL")]
		public int العدد
		{
			get
			{
				return this._العدد;
			}
			set
			{
				if ((this._العدد != value))
				{
					this._العدد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الدائرة", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الدائرة
		{
			get
			{
				return this._الدائرة;
			}
			set
			{
				if ((this._الدائرة != value))
				{
					this._الدائرة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_القسم", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string القسم
		{
			get
			{
				return this._القسم;
			}
			set
			{
				if ((this._القسم != value))
				{
					this._القسم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الوحدة", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string الوحدة
		{
			get
			{
				return this._الوحدة;
			}
			set
			{
				if ((this._الوحدة != value))
				{
					this._الوحدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الساحة", DbType="NVarChar(100)")]
		public string الساحة
		{
			get
			{
				return this._الساحة;
			}
			set
			{
				if ((this._الساحة != value))
				{
					this._الساحة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الفئة الرئيسية]", Storage="_الفئة_الرئيسية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الفئة_الرئيسية
		{
			get
			{
				return this._الفئة_الرئيسية;
			}
			set
			{
				if ((this._الفئة_الرئيسية != value))
				{
					this._الفئة_الرئيسية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الفئة الفرعية]", Storage="_الفئة_الفرعية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الفئة_الفرعية
		{
			get
			{
				return this._الفئة_الفرعية;
			}
			set
			{
				if ((this._الفئة_الفرعية != value))
				{
					this._الفئة_الفرعية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مواصفات الأصل]", Storage="_مواصفات_الأصل", DbType="NVarChar(MAX)")]
		public string مواصفات_الأصل
		{
			get
			{
				return this._مواصفات_الأصل;
			}
			set
			{
				if ((this._مواصفات_الأصل != value))
				{
					this._مواصفات_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الموديل", DbType="NVarChar(100)")]
		public string الموديل
		{
			get
			{
				return this._الموديل;
			}
			set
			{
				if ((this._الموديل != value))
				{
					this._الموديل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_اللون", DbType="NVarChar(50)")]
		public string اللون
		{
			get
			{
				return this._اللون;
			}
			set
			{
				if ((this._اللون != value))
				{
					this._اللون = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الحجم / السعة]", Storage="_الحجم___السعة", DbType="NVarChar(50)")]
		public string الحجم___السعة
		{
			get
			{
				return this._الحجم___السعة;
			}
			set
			{
				if ((this._الحجم___السعة != value))
				{
					this._الحجم___السعة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ الشراء]", Storage="_تاريخ_الشراء", DbType="Date")]
		public System.Nullable<System.DateTime> تاريخ_الشراء
		{
			get
			{
				return this._تاريخ_الشراء;
			}
			set
			{
				if ((this._تاريخ_الشراء != value))
				{
					this._تاريخ_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سعر الشراء]", Storage="_سعر_الشراء", DbType="Float")]
		public System.Nullable<double> سعر_الشراء
		{
			get
			{
				return this._سعر_الشراء;
			}
			set
			{
				if ((this._سعر_الشراء != value))
				{
					this._سعر_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة سعر الشراء]", Storage="_عملة_سعر_الشراء", DbType="NVarChar(100)")]
		public string عملة_سعر_الشراء
		{
			get
			{
				return this._عملة_سعر_الشراء;
			}
			set
			{
				if ((this._عملة_سعر_الشراء != value))
				{
					this._عملة_سعر_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مكان التواجد]", Storage="_مكان_التواجد", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string مكان_التواجد
		{
			get
			{
				return this._مكان_التواجد;
			}
			set
			{
				if ((this._مكان_التواجد != value))
				{
					this._مكان_التواجد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[حالة الأصل الآنية]", Storage="_حالة_الأصل_الآنية", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string حالة_الأصل_الآنية
		{
			get
			{
				return this._حالة_الأصل_الآنية;
			}
			set
			{
				if ((this._حالة_الأصل_الآنية != value))
				{
					this._حالة_الأصل_الآنية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نسبة الاستفادة منه]", Storage="_نسبة_الاستفادة_منه", DbType="NVarChar(50)")]
		public string نسبة_الاستفادة_منه
		{
			get
			{
				return this._نسبة_الاستفادة_منه;
			}
			set
			{
				if ((this._نسبة_الاستفادة_منه != value))
				{
					this._نسبة_الاستفادة_منه = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[السعر الفعلي الحالي]", Storage="_السعر_الفعلي_الحالي", DbType="Float NOT NULL")]
		public double السعر_الفعلي_الحالي
		{
			get
			{
				return this._السعر_الفعلي_الحالي;
			}
			set
			{
				if ((this._السعر_الفعلي_الحالي != value))
				{
					this._السعر_الفعلي_الحالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة السعر الفعلي الحالي]", Storage="_عملة_السعر_الفعلي_الحالي", DbType="NVarChar(100)")]
		public string عملة_السعر_الفعلي_الحالي
		{
			get
			{
				return this._عملة_السعر_الفعلي_الحالي;
			}
			set
			{
				if ((this._عملة_السعر_الفعلي_الحالي != value))
				{
					this._عملة_السعر_الفعلي_الحالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم صاحب العهدة]", Storage="_اسم_صاحب_العهدة", DbType="NVarChar(50)")]
		public string اسم_صاحب_العهدة
		{
			get
			{
				return this._اسم_صاحب_العهدة;
			}
			set
			{
				if ((this._اسم_صاحب_العهدة != value))
				{
					this._اسم_صاحب_العهدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تفاصيل إضافية]", Storage="_تفاصيل_إضافية", DbType="NVarChar(MAX)")]
		public string تفاصيل_إضافية
		{
			get
			{
				return this._تفاصيل_إضافية;
			}
			set
			{
				if ((this._تفاصيل_إضافية != value))
				{
					this._تفاصيل_إضافية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ملاحظات أخرى]", Storage="_ملاحظات_أخرى", DbType="NVarChar(MAX)")]
		public string ملاحظات_أخرى
		{
			get
			{
				return this._ملاحظات_أخرى;
			}
			set
			{
				if ((this._ملاحظات_أخرى != value))
				{
					this._ملاحظات_أخرى = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عنوان العقار]", Storage="_عنوان_العقار", DbType="NVarChar(200)")]
		public string عنوان_العقار
		{
			get
			{
				return this._عنوان_العقار;
			}
			set
			{
				if ((this._عنوان_العقار != value))
				{
					this._عنوان_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم المالك]", Storage="_اسم_المالك", DbType="NVarChar(200)")]
		public string اسم_المالك
		{
			get
			{
				return this._اسم_المالك;
			}
			set
			{
				if ((this._اسم_المالك != value))
				{
					this._اسم_المالك = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المستغل منه]", Storage="_المستغل_منه", DbType="NVarChar(200)")]
		public string المستغل_منه
		{
			get
			{
				return this._المستغل_منه;
			}
			set
			{
				if ((this._المستغل_منه != value))
				{
					this._المستغل_منه = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مع من ورقة الملكية]", Storage="_مع_من_ورقة_الملكية", DbType="NVarChar(200)")]
		public string مع_من_ورقة_الملكية
		{
			get
			{
				return this._مع_من_ورقة_الملكية;
			}
			set
			{
				if ((this._مع_من_ورقة_الملكية != value))
				{
					this._مع_من_ورقة_الملكية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مساحة العقار]", Storage="_مساحة_العقار", DbType="NVarChar(50)")]
		public string مساحة_العقار
		{
			get
			{
				return this._مساحة_العقار;
			}
			set
			{
				if ((this._مساحة_العقار != value))
				{
					this._مساحة_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وحدة مساحة العقار]", Storage="_وحدة_مساحة_العقار", DbType="NVarChar(100)")]
		public string وحدة_مساحة_العقار
		{
			get
			{
				return this._وحدة_مساحة_العقار;
			}
			set
			{
				if ((this._وحدة_مساحة_العقار != value))
				{
					this._وحدة_مساحة_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم لوحة المركبة]", Storage="_رقم_لوحة_المركبة", DbType="NVarChar(20)")]
		public string رقم_لوحة_المركبة
		{
			get
			{
				return this._رقم_لوحة_المركبة;
			}
			set
			{
				if ((this._رقم_لوحة_المركبة != value))
				{
					this._رقم_لوحة_المركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سنة صنع المركبة]", Storage="_سنة_صنع_المركبة", DbType="Int")]
		public System.Nullable<int> سنة_صنع_المركبة
		{
			get
			{
				return this._سنة_صنع_المركبة;
			}
			set
			{
				if ((this._سنة_صنع_المركبة != value))
				{
					this._سنة_صنع_المركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الهيكل (الشاصيه) للمركبة]", Storage="_رقم_الهيكل__الشاصيه__للمركبة", DbType="NVarChar(50)")]
		public string رقم_الهيكل__الشاصيه__للمركبة
		{
			get
			{
				return this._رقم_الهيكل__الشاصيه__للمركبة;
			}
			set
			{
				if ((this._رقم_الهيكل__الشاصيه__للمركبة != value))
				{
					this._رقم_الهيكل__الشاصيه__للمركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم المحرك للمركبة]", Storage="_رقم_المحرك_للمركبة", DbType="NVarChar(50)")]
		public string رقم_المحرك_للمركبة
		{
			get
			{
				return this._رقم_المحرك_للمركبة;
			}
			set
			{
				if ((this._رقم_المحرك_للمركبة != value))
				{
					this._رقم_المحرك_للمركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معدل الإهلاك للأصل]", Storage="_معدل_الإهلاك_للأصل", DbType="Float NOT NULL")]
		public double معدل_الإهلاك_للأصل
		{
			get
			{
				return this._معدل_الإهلاك_للأصل;
			}
			set
			{
				if ((this._معدل_الإهلاك_للأصل != value))
				{
					this._معدل_الإهلاك_للأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[العمر الافتراضي المتبقي للأصل]", Storage="_العمر_الافتراضي_المتبقي_للأصل", DbType="NVarChar(50)")]
		public string العمر_الافتراضي_المتبقي_للأصل
		{
			get
			{
				return this._العمر_الافتراضي_المتبقي_للأصل;
			}
			set
			{
				if ((this._العمر_الافتراضي_المتبقي_للأصل != value))
				{
					this._العمر_الافتراضي_المتبقي_للأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ الإدخال]", Storage="_تاريخ_الإدخال", DbType="Date")]
		public System.Nullable<System.DateTime> تاريخ_الإدخال
		{
			get
			{
				return this._تاريخ_الإدخال;
			}
			set
			{
				if ((this._تاريخ_الإدخال != value))
				{
					this._تاريخ_الإدخال = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetVw_All")]
	public partial class AssetVw_All
	{
		
		private int _معرف_الأصل;
		
		private string _كود_الأصل;
		
		private int _العدد;
		
		private string _الدائرة;
		
		private string _القسم;
		
		private string _الوحدة;
		
		private string _الساحة;
		
		private string _الفئة_الرئيسية;
		
		private string _الفئة_الفرعية;
		
		private string _مواصفات_الأصل;
		
		private string _الموديل;
		
		private string _اللون;
		
		private string _الحجم___السعة;
		
		private System.Nullable<System.DateTime> _تاريخ_الشراء;
		
		private System.Nullable<double> _سعر_الشراء;
		
		private string _عملة_سعر_الشراء;
		
		private string _مكان_التواجد;
		
		private string _حالة_الأصل_الآنية;
		
		private string _نسبة_الاستفادة_منه;
		
		private double _السعر_الفعلي_الحالي;
		
		private string _عملة_السعر_الفعلي_الحالي;
		
		private string _اسم_صاحب_العهدة;
		
		private string _تفاصيل_إضافية;
		
		private string _ملاحظات_أخرى;
		
		private string _عنوان_العقار;
		
		private string _اسم_المالك;
		
		private string _المستغل_منه;
		
		private string _مع_من_ورقة_الملكية;
		
		private string _مساحة_العقار;
		
		private string _وحدة_مساحة_العقار;
		
		private string _رقم_لوحة_المركبة;
		
		private System.Nullable<int> _سنة_صنع_المركبة;
		
		private string _رقم_الهيكل__الشاصيه__للمركبة;
		
		private string _رقم_المحرك_للمركبة;
		
		private double _معدل_الإهلاك_للأصل;
		
		private string _العمر_الافتراضي_المتبقي_للأصل;
		
		private System.Nullable<System.DateTime> _تاريخ_الإدخال;
		
		public AssetVw_All()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف الأصل]", Storage="_معرف_الأصل", DbType="Int NOT NULL")]
		public int معرف_الأصل
		{
			get
			{
				return this._معرف_الأصل;
			}
			set
			{
				if ((this._معرف_الأصل != value))
				{
					this._معرف_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[كود الأصل]", Storage="_كود_الأصل", DbType="NVarChar(100)")]
		public string كود_الأصل
		{
			get
			{
				return this._كود_الأصل;
			}
			set
			{
				if ((this._كود_الأصل != value))
				{
					this._كود_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العدد", DbType="Int NOT NULL")]
		public int العدد
		{
			get
			{
				return this._العدد;
			}
			set
			{
				if ((this._العدد != value))
				{
					this._العدد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الدائرة", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الدائرة
		{
			get
			{
				return this._الدائرة;
			}
			set
			{
				if ((this._الدائرة != value))
				{
					this._الدائرة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_القسم", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string القسم
		{
			get
			{
				return this._القسم;
			}
			set
			{
				if ((this._القسم != value))
				{
					this._القسم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الوحدة", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string الوحدة
		{
			get
			{
				return this._الوحدة;
			}
			set
			{
				if ((this._الوحدة != value))
				{
					this._الوحدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الساحة", DbType="NVarChar(100)")]
		public string الساحة
		{
			get
			{
				return this._الساحة;
			}
			set
			{
				if ((this._الساحة != value))
				{
					this._الساحة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الفئة الرئيسية]", Storage="_الفئة_الرئيسية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الفئة_الرئيسية
		{
			get
			{
				return this._الفئة_الرئيسية;
			}
			set
			{
				if ((this._الفئة_الرئيسية != value))
				{
					this._الفئة_الرئيسية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الفئة الفرعية]", Storage="_الفئة_الفرعية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الفئة_الفرعية
		{
			get
			{
				return this._الفئة_الفرعية;
			}
			set
			{
				if ((this._الفئة_الفرعية != value))
				{
					this._الفئة_الفرعية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مواصفات الأصل]", Storage="_مواصفات_الأصل", DbType="NVarChar(MAX)")]
		public string مواصفات_الأصل
		{
			get
			{
				return this._مواصفات_الأصل;
			}
			set
			{
				if ((this._مواصفات_الأصل != value))
				{
					this._مواصفات_الأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الموديل", DbType="NVarChar(100)")]
		public string الموديل
		{
			get
			{
				return this._الموديل;
			}
			set
			{
				if ((this._الموديل != value))
				{
					this._الموديل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_اللون", DbType="NVarChar(50)")]
		public string اللون
		{
			get
			{
				return this._اللون;
			}
			set
			{
				if ((this._اللون != value))
				{
					this._اللون = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الحجم / السعة]", Storage="_الحجم___السعة", DbType="NVarChar(50)")]
		public string الحجم___السعة
		{
			get
			{
				return this._الحجم___السعة;
			}
			set
			{
				if ((this._الحجم___السعة != value))
				{
					this._الحجم___السعة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ الشراء]", Storage="_تاريخ_الشراء", DbType="Date")]
		public System.Nullable<System.DateTime> تاريخ_الشراء
		{
			get
			{
				return this._تاريخ_الشراء;
			}
			set
			{
				if ((this._تاريخ_الشراء != value))
				{
					this._تاريخ_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سعر الشراء]", Storage="_سعر_الشراء", DbType="Float")]
		public System.Nullable<double> سعر_الشراء
		{
			get
			{
				return this._سعر_الشراء;
			}
			set
			{
				if ((this._سعر_الشراء != value))
				{
					this._سعر_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة سعر الشراء]", Storage="_عملة_سعر_الشراء", DbType="NVarChar(100)")]
		public string عملة_سعر_الشراء
		{
			get
			{
				return this._عملة_سعر_الشراء;
			}
			set
			{
				if ((this._عملة_سعر_الشراء != value))
				{
					this._عملة_سعر_الشراء = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مكان التواجد]", Storage="_مكان_التواجد", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string مكان_التواجد
		{
			get
			{
				return this._مكان_التواجد;
			}
			set
			{
				if ((this._مكان_التواجد != value))
				{
					this._مكان_التواجد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[حالة الأصل الآنية]", Storage="_حالة_الأصل_الآنية", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string حالة_الأصل_الآنية
		{
			get
			{
				return this._حالة_الأصل_الآنية;
			}
			set
			{
				if ((this._حالة_الأصل_الآنية != value))
				{
					this._حالة_الأصل_الآنية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[نسبة الاستفادة منه]", Storage="_نسبة_الاستفادة_منه", DbType="NVarChar(50)")]
		public string نسبة_الاستفادة_منه
		{
			get
			{
				return this._نسبة_الاستفادة_منه;
			}
			set
			{
				if ((this._نسبة_الاستفادة_منه != value))
				{
					this._نسبة_الاستفادة_منه = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[السعر الفعلي الحالي]", Storage="_السعر_الفعلي_الحالي", DbType="Float NOT NULL")]
		public double السعر_الفعلي_الحالي
		{
			get
			{
				return this._السعر_الفعلي_الحالي;
			}
			set
			{
				if ((this._السعر_الفعلي_الحالي != value))
				{
					this._السعر_الفعلي_الحالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عملة السعر الفعلي الحالي]", Storage="_عملة_السعر_الفعلي_الحالي", DbType="NVarChar(100)")]
		public string عملة_السعر_الفعلي_الحالي
		{
			get
			{
				return this._عملة_السعر_الفعلي_الحالي;
			}
			set
			{
				if ((this._عملة_السعر_الفعلي_الحالي != value))
				{
					this._عملة_السعر_الفعلي_الحالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم صاحب العهدة]", Storage="_اسم_صاحب_العهدة", DbType="NVarChar(50)")]
		public string اسم_صاحب_العهدة
		{
			get
			{
				return this._اسم_صاحب_العهدة;
			}
			set
			{
				if ((this._اسم_صاحب_العهدة != value))
				{
					this._اسم_صاحب_العهدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تفاصيل إضافية]", Storage="_تفاصيل_إضافية", DbType="NVarChar(MAX)")]
		public string تفاصيل_إضافية
		{
			get
			{
				return this._تفاصيل_إضافية;
			}
			set
			{
				if ((this._تفاصيل_إضافية != value))
				{
					this._تفاصيل_إضافية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ملاحظات أخرى]", Storage="_ملاحظات_أخرى", DbType="NVarChar(MAX)")]
		public string ملاحظات_أخرى
		{
			get
			{
				return this._ملاحظات_أخرى;
			}
			set
			{
				if ((this._ملاحظات_أخرى != value))
				{
					this._ملاحظات_أخرى = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[عنوان العقار]", Storage="_عنوان_العقار", DbType="NVarChar(200)")]
		public string عنوان_العقار
		{
			get
			{
				return this._عنوان_العقار;
			}
			set
			{
				if ((this._عنوان_العقار != value))
				{
					this._عنوان_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم المالك]", Storage="_اسم_المالك", DbType="NVarChar(200)")]
		public string اسم_المالك
		{
			get
			{
				return this._اسم_المالك;
			}
			set
			{
				if ((this._اسم_المالك != value))
				{
					this._اسم_المالك = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المستغل منه]", Storage="_المستغل_منه", DbType="NVarChar(200)")]
		public string المستغل_منه
		{
			get
			{
				return this._المستغل_منه;
			}
			set
			{
				if ((this._المستغل_منه != value))
				{
					this._المستغل_منه = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مع من ورقة الملكية]", Storage="_مع_من_ورقة_الملكية", DbType="NVarChar(200)")]
		public string مع_من_ورقة_الملكية
		{
			get
			{
				return this._مع_من_ورقة_الملكية;
			}
			set
			{
				if ((this._مع_من_ورقة_الملكية != value))
				{
					this._مع_من_ورقة_الملكية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[مساحة العقار]", Storage="_مساحة_العقار", DbType="NVarChar(50)")]
		public string مساحة_العقار
		{
			get
			{
				return this._مساحة_العقار;
			}
			set
			{
				if ((this._مساحة_العقار != value))
				{
					this._مساحة_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وحدة مساحة العقار]", Storage="_وحدة_مساحة_العقار", DbType="NVarChar(100)")]
		public string وحدة_مساحة_العقار
		{
			get
			{
				return this._وحدة_مساحة_العقار;
			}
			set
			{
				if ((this._وحدة_مساحة_العقار != value))
				{
					this._وحدة_مساحة_العقار = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم لوحة المركبة]", Storage="_رقم_لوحة_المركبة", DbType="NVarChar(20)")]
		public string رقم_لوحة_المركبة
		{
			get
			{
				return this._رقم_لوحة_المركبة;
			}
			set
			{
				if ((this._رقم_لوحة_المركبة != value))
				{
					this._رقم_لوحة_المركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[سنة صنع المركبة]", Storage="_سنة_صنع_المركبة", DbType="Int")]
		public System.Nullable<int> سنة_صنع_المركبة
		{
			get
			{
				return this._سنة_صنع_المركبة;
			}
			set
			{
				if ((this._سنة_صنع_المركبة != value))
				{
					this._سنة_صنع_المركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم الهيكل (الشاصيه) للمركبة]", Storage="_رقم_الهيكل__الشاصيه__للمركبة", DbType="NVarChar(50)")]
		public string رقم_الهيكل__الشاصيه__للمركبة
		{
			get
			{
				return this._رقم_الهيكل__الشاصيه__للمركبة;
			}
			set
			{
				if ((this._رقم_الهيكل__الشاصيه__للمركبة != value))
				{
					this._رقم_الهيكل__الشاصيه__للمركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[رقم المحرك للمركبة]", Storage="_رقم_المحرك_للمركبة", DbType="NVarChar(50)")]
		public string رقم_المحرك_للمركبة
		{
			get
			{
				return this._رقم_المحرك_للمركبة;
			}
			set
			{
				if ((this._رقم_المحرك_للمركبة != value))
				{
					this._رقم_المحرك_للمركبة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معدل الإهلاك للأصل]", Storage="_معدل_الإهلاك_للأصل", DbType="Float NOT NULL")]
		public double معدل_الإهلاك_للأصل
		{
			get
			{
				return this._معدل_الإهلاك_للأصل;
			}
			set
			{
				if ((this._معدل_الإهلاك_للأصل != value))
				{
					this._معدل_الإهلاك_للأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[العمر الافتراضي المتبقي للأصل]", Storage="_العمر_الافتراضي_المتبقي_للأصل", DbType="NVarChar(50)")]
		public string العمر_الافتراضي_المتبقي_للأصل
		{
			get
			{
				return this._العمر_الافتراضي_المتبقي_للأصل;
			}
			set
			{
				if ((this._العمر_الافتراضي_المتبقي_للأصل != value))
				{
					this._العمر_الافتراضي_المتبقي_للأصل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ الإدخال]", Storage="_تاريخ_الإدخال", DbType="Date")]
		public System.Nullable<System.DateTime> تاريخ_الإدخال
		{
			get
			{
				return this._تاريخ_الإدخال;
			}
			set
			{
				if ((this._تاريخ_الإدخال != value))
				{
					this._تاريخ_الإدخال = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentVw")]
	public partial class DepartmentVw
	{
		
		private int _معرف_القسم;
		
		private string _اسم_القسم;
		
		private string _الدائرة_التي_يتبع_لها_القسم;
		
		public DepartmentVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف القسم]", Storage="_معرف_القسم", DbType="Int NOT NULL")]
		public int معرف_القسم
		{
			get
			{
				return this._معرف_القسم;
			}
			set
			{
				if ((this._معرف_القسم != value))
				{
					this._معرف_القسم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم القسم]", Storage="_اسم_القسم", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string اسم_القسم
		{
			get
			{
				return this._اسم_القسم;
			}
			set
			{
				if ((this._اسم_القسم != value))
				{
					this._اسم_القسم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[الدائرة التي يتبع لها القسم]", Storage="_الدائرة_التي_يتبع_لها_القسم", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الدائرة_التي_يتبع_لها_القسم
		{
			get
			{
				return this._الدائرة_التي_يتبع_لها_القسم;
			}
			set
			{
				if ((this._الدائرة_التي_يتبع_لها_القسم != value))
				{
					this._الدائرة_التي_يتبع_لها_القسم = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinancialItemVw")]
	public partial class FinancialItemVw
	{
		
		private int _معرف_السجل_المالي;
		
		private string _كود_السجل_المالي;
		
		private string _اسم_البند_المالي;
		
		private string _بيان_السجل_المالي;
		
		private string _الدائرة;
		
		private string _القسم;
		
		private string _الوحدة;
		
		private System.DateTime _تاريخ_تحرير_السجل;
		
		private string _وارد_أم_صادر;
		
		private double _المبلغ_الوارد;
		
		private double _المبلغ_الصادر;
		
		private string _العملة;
		
		private string _ملاحظات_إضافية;
		
		public FinancialItemVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف السجل المالي]", Storage="_معرف_السجل_المالي", DbType="Int NOT NULL")]
		public int معرف_السجل_المالي
		{
			get
			{
				return this._معرف_السجل_المالي;
			}
			set
			{
				if ((this._معرف_السجل_المالي != value))
				{
					this._معرف_السجل_المالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[كود السجل المالي]", Storage="_كود_السجل_المالي", DbType="NVarChar(50)")]
		public string كود_السجل_المالي
		{
			get
			{
				return this._كود_السجل_المالي;
			}
			set
			{
				if ((this._كود_السجل_المالي != value))
				{
					this._كود_السجل_المالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم البند المالي]", Storage="_اسم_البند_المالي", DbType="NVarChar(200)")]
		public string اسم_البند_المالي
		{
			get
			{
				return this._اسم_البند_المالي;
			}
			set
			{
				if ((this._اسم_البند_المالي != value))
				{
					this._اسم_البند_المالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[بيان السجل المالي]", Storage="_بيان_السجل_المالي", DbType="NVarChar(300)")]
		public string بيان_السجل_المالي
		{
			get
			{
				return this._بيان_السجل_المالي;
			}
			set
			{
				if ((this._بيان_السجل_المالي != value))
				{
					this._بيان_السجل_المالي = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الدائرة", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string الدائرة
		{
			get
			{
				return this._الدائرة;
			}
			set
			{
				if ((this._الدائرة != value))
				{
					this._الدائرة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_القسم", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string القسم
		{
			get
			{
				return this._القسم;
			}
			set
			{
				if ((this._القسم != value))
				{
					this._القسم = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_الوحدة", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string الوحدة
		{
			get
			{
				return this._الوحدة;
			}
			set
			{
				if ((this._الوحدة != value))
				{
					this._الوحدة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[تاريخ تحرير السجل]", Storage="_تاريخ_تحرير_السجل", DbType="Date NOT NULL")]
		public System.DateTime تاريخ_تحرير_السجل
		{
			get
			{
				return this._تاريخ_تحرير_السجل;
			}
			set
			{
				if ((this._تاريخ_تحرير_السجل != value))
				{
					this._تاريخ_تحرير_السجل = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وارد أم صادر]", Storage="_وارد_أم_صادر", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string وارد_أم_صادر
		{
			get
			{
				return this._وارد_أم_صادر;
			}
			set
			{
				if ((this._وارد_أم_صادر != value))
				{
					this._وارد_أم_صادر = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المبلغ الوارد]", Storage="_المبلغ_الوارد", DbType="Float NOT NULL")]
		public double المبلغ_الوارد
		{
			get
			{
				return this._المبلغ_الوارد;
			}
			set
			{
				if ((this._المبلغ_الوارد != value))
				{
					this._المبلغ_الوارد = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[المبلغ الصادر]", Storage="_المبلغ_الصادر", DbType="Float NOT NULL")]
		public double المبلغ_الصادر
		{
			get
			{
				return this._المبلغ_الصادر;
			}
			set
			{
				if ((this._المبلغ_الصادر != value))
				{
					this._المبلغ_الصادر = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_العملة", DbType="NVarChar(100)")]
		public string العملة
		{
			get
			{
				return this._العملة;
			}
			set
			{
				if ((this._العملة != value))
				{
					this._العملة = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ملاحظات إضافية]", Storage="_ملاحظات_إضافية", DbType="NVarChar(300)")]
		public string ملاحظات_إضافية
		{
			get
			{
				return this._ملاحظات_إضافية;
			}
			set
			{
				if ((this._ملاحظات_إضافية != value))
				{
					this._ملاحظات_إضافية = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MinorCategoryVw")]
	public partial class MinorCategoryVw
	{
		
		private int _معرف_الفئة_الفرعية;
		
		private int _معرف_الفئة_الرئيسية;
		
		private string _اسم_الفئة_الفرعية;
		
		private string _وصف_الفئة_الفرعية;
		
		private string _اسم_الفئة_الرئيسية;
		
		private int _العمر_الإنتاجي_بالسنوات;
		
		private double _معدل_الإهلاك;
		
		public MinorCategoryVw()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف الفئة الفرعية]", Storage="_معرف_الفئة_الفرعية", DbType="Int NOT NULL")]
		public int معرف_الفئة_الفرعية
		{
			get
			{
				return this._معرف_الفئة_الفرعية;
			}
			set
			{
				if ((this._معرف_الفئة_الفرعية != value))
				{
					this._معرف_الفئة_الفرعية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معرف الفئة الرئيسية]", Storage="_معرف_الفئة_الرئيسية", DbType="Int NOT NULL")]
		public int معرف_الفئة_الرئيسية
		{
			get
			{
				return this._معرف_الفئة_الرئيسية;
			}
			set
			{
				if ((this._معرف_الفئة_الرئيسية != value))
				{
					this._معرف_الفئة_الرئيسية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الفئة الفرعية]", Storage="_اسم_الفئة_الفرعية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string اسم_الفئة_الفرعية
		{
			get
			{
				return this._اسم_الفئة_الفرعية;
			}
			set
			{
				if ((this._اسم_الفئة_الفرعية != value))
				{
					this._اسم_الفئة_الفرعية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[وصف الفئة الفرعية]", Storage="_وصف_الفئة_الفرعية", DbType="NVarChar(300)")]
		public string وصف_الفئة_الفرعية
		{
			get
			{
				return this._وصف_الفئة_الفرعية;
			}
			set
			{
				if ((this._وصف_الفئة_الفرعية != value))
				{
					this._وصف_الفئة_الفرعية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[اسم الفئة الرئيسية]", Storage="_اسم_الفئة_الرئيسية", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string اسم_الفئة_الرئيسية
		{
			get
			{
				return this._اسم_الفئة_الرئيسية;
			}
			set
			{
				if ((this._اسم_الفئة_الرئيسية != value))
				{
					this._اسم_الفئة_الرئيسية = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[العمر الإنتاجي بالسنوات]", Storage="_العمر_الإنتاجي_بالسنوات", DbType="Int NOT NULL")]
		public int العمر_الإنتاجي_بالسنوات
		{
			get
			{
				return this._العمر_الإنتاجي_بالسنوات;
			}
			set
			{
				if ((this._العمر_الإنتاجي_بالسنوات != value))
				{
					this._العمر_الإنتاجي_بالسنوات = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[معدل الإهلاك]", Storage="_معدل_الإهلاك", DbType="Float NOT NULL")]
		public double معدل_الإهلاك
		{
			get
			{
				return this._معدل_الإهلاك;
			}
			set
			{
				if ((this._معدل_الإهلاك != value))
				{
					this._معدل_الإهلاك = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
