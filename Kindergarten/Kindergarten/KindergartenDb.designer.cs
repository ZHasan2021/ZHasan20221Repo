#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kindergarten
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KindergartenDb")]
	public partial class KindergartenDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEducationalLevelTbl(EducationalLevelTbl instance);
    partial void UpdateEducationalLevelTbl(EducationalLevelTbl instance);
    partial void DeleteEducationalLevelTbl(EducationalLevelTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    partial void InsertFeePeriodTbl(FeePeriodTbl instance);
    partial void UpdateFeePeriodTbl(FeePeriodTbl instance);
    partial void DeleteFeePeriodTbl(FeePeriodTbl instance);
    partial void InsertOptionsTbl(OptionsTbl instance);
    partial void UpdateOptionsTbl(OptionsTbl instance);
    partial void DeleteOptionsTbl(OptionsTbl instance);
    partial void InsertScholasticYearTbl(ScholasticYearTbl instance);
    partial void UpdateScholasticYearTbl(ScholasticYearTbl instance);
    partial void DeleteScholasticYearTbl(ScholasticYearTbl instance);
    partial void InsertStudentFeeTbl(StudentFeeTbl instance);
    partial void UpdateStudentFeeTbl(StudentFeeTbl instance);
    partial void DeleteStudentFeeTbl(StudentFeeTbl instance);
    partial void InsertStudentTbl(StudentTbl instance);
    partial void UpdateStudentTbl(StudentTbl instance);
    partial void DeleteStudentTbl(StudentTbl instance);
    partial void InsertUserRoleTbl(UserRoleTbl instance);
    partial void UpdateUserRoleTbl(UserRoleTbl instance);
    partial void DeleteUserRoleTbl(UserRoleTbl instance);
    #endregion
		
		public KindergartenDbDataContext() : 
				base(global::Kindergarten.Properties.Settings.Default.KindergartenDbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KindergartenDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KindergartenDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KindergartenDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KindergartenDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EducationalLevelTbl> EducationalLevelTbls
		{
			get
			{
				return this.GetTable<EducationalLevelTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
		
		public System.Data.Linq.Table<FeePeriodTbl> FeePeriodTbls
		{
			get
			{
				return this.GetTable<FeePeriodTbl>();
			}
		}
		
		public System.Data.Linq.Table<OptionsTbl> OptionsTbls
		{
			get
			{
				return this.GetTable<OptionsTbl>();
			}
		}
		
		public System.Data.Linq.Table<ScholasticYearTbl> ScholasticYearTbls
		{
			get
			{
				return this.GetTable<ScholasticYearTbl>();
			}
		}
		
		public System.Data.Linq.Table<StudentFeeTbl> StudentFeeTbls
		{
			get
			{
				return this.GetTable<StudentFeeTbl>();
			}
		}
		
		public System.Data.Linq.Table<StudentTbl> StudentTbls
		{
			get
			{
				return this.GetTable<StudentTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleTbl> UserRoleTbls
		{
			get
			{
				return this.GetTable<UserRoleTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducationalLevelTbl")]
	public partial class EducationalLevelTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EducationalLevelName;
		
		private double _EducationalLevelMonthlyFee;
		
		private double _EducationalLevelSemesterFee;
		
		private double _EducationalLevelAnnualFee;
		
		private EntitySet<StudentTbl> _StudentTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEducationalLevelNameChanging(string value);
    partial void OnEducationalLevelNameChanged();
    partial void OnEducationalLevelMonthlyFeeChanging(double value);
    partial void OnEducationalLevelMonthlyFeeChanged();
    partial void OnEducationalLevelSemesterFeeChanging(double value);
    partial void OnEducationalLevelSemesterFeeChanged();
    partial void OnEducationalLevelAnnualFeeChanging(double value);
    partial void OnEducationalLevelAnnualFeeChanged();
    #endregion
		
		public EducationalLevelTbl()
		{
			this._StudentTbls = new EntitySet<StudentTbl>(new Action<StudentTbl>(this.attach_StudentTbls), new Action<StudentTbl>(this.detach_StudentTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EducationalLevelName
		{
			get
			{
				return this._EducationalLevelName;
			}
			set
			{
				if ((this._EducationalLevelName != value))
				{
					this.OnEducationalLevelNameChanging(value);
					this.SendPropertyChanging();
					this._EducationalLevelName = value;
					this.SendPropertyChanged("EducationalLevelName");
					this.OnEducationalLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLevelMonthlyFee", DbType="Float NOT NULL")]
		public double EducationalLevelMonthlyFee
		{
			get
			{
				return this._EducationalLevelMonthlyFee;
			}
			set
			{
				if ((this._EducationalLevelMonthlyFee != value))
				{
					this.OnEducationalLevelMonthlyFeeChanging(value);
					this.SendPropertyChanging();
					this._EducationalLevelMonthlyFee = value;
					this.SendPropertyChanged("EducationalLevelMonthlyFee");
					this.OnEducationalLevelMonthlyFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLevelSemesterFee", DbType="Float NOT NULL")]
		public double EducationalLevelSemesterFee
		{
			get
			{
				return this._EducationalLevelSemesterFee;
			}
			set
			{
				if ((this._EducationalLevelSemesterFee != value))
				{
					this.OnEducationalLevelSemesterFeeChanging(value);
					this.SendPropertyChanging();
					this._EducationalLevelSemesterFee = value;
					this.SendPropertyChanged("EducationalLevelSemesterFee");
					this.OnEducationalLevelSemesterFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLevelAnnualFee", DbType="Float NOT NULL")]
		public double EducationalLevelAnnualFee
		{
			get
			{
				return this._EducationalLevelAnnualFee;
			}
			set
			{
				if ((this._EducationalLevelAnnualFee != value))
				{
					this.OnEducationalLevelAnnualFeeChanging(value);
					this.SendPropertyChanging();
					this._EducationalLevelAnnualFee = value;
					this.SendPropertyChanged("EducationalLevelAnnualFee");
					this.OnEducationalLevelAnnualFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducationalLevelTbl_StudentTbl", Storage="_StudentTbls", ThisKey="ID", OtherKey="EducationalLevel")]
		public EntitySet<StudentTbl> StudentTbls
		{
			get
			{
				return this._StudentTbls;
			}
			set
			{
				this._StudentTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentTbls(StudentTbl entity)
		{
			this.SendPropertyChanging();
			entity.EducationalLevelTbl = this;
		}
		
		private void detach_StudentTbls(StudentTbl entity)
		{
			this.SendPropertyChanging();
			entity.EducationalLevelTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private int _UserRole;
		
		private System.Nullable<System.DateTime> _PasswordUpdatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserRoleChanging(int value);
    partial void OnUserRoleChanged();
    partial void OnPasswordUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordUpdatedOnChanged();
    #endregion
		
		public UserTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRole", DbType="Int NOT NULL")]
		public int UserRole
		{
			get
			{
				return this._UserRole;
			}
			set
			{
				if ((this._UserRole != value))
				{
					this.OnUserRoleChanging(value);
					this.SendPropertyChanging();
					this._UserRole = value;
					this.SendPropertyChanged("UserRole");
					this.OnUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordUpdatedOn", DbType="Date")]
		public System.Nullable<System.DateTime> PasswordUpdatedOn
		{
			get
			{
				return this._PasswordUpdatedOn;
			}
			set
			{
				if ((this._PasswordUpdatedOn != value))
				{
					this.OnPasswordUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._PasswordUpdatedOn = value;
					this.SendPropertyChanged("PasswordUpdatedOn");
					this.OnPasswordUpdatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeePeriodTbl")]
	public partial class FeePeriodTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FeePeriodName;
		
		private EntitySet<StudentFeeTbl> _StudentFeeTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFeePeriodNameChanging(string value);
    partial void OnFeePeriodNameChanged();
    #endregion
		
		public FeePeriodTbl()
		{
			this._StudentFeeTbls = new EntitySet<StudentFeeTbl>(new Action<StudentFeeTbl>(this.attach_StudentFeeTbls), new Action<StudentFeeTbl>(this.detach_StudentFeeTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePeriodName", DbType="NVarChar(50)")]
		public string FeePeriodName
		{
			get
			{
				return this._FeePeriodName;
			}
			set
			{
				if ((this._FeePeriodName != value))
				{
					this.OnFeePeriodNameChanging(value);
					this.SendPropertyChanging();
					this._FeePeriodName = value;
					this.SendPropertyChanged("FeePeriodName");
					this.OnFeePeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePeriodTbl_StudentFeeTbl", Storage="_StudentFeeTbls", ThisKey="ID", OtherKey="FeePeriod")]
		public EntitySet<StudentFeeTbl> StudentFeeTbls
		{
			get
			{
				return this._StudentFeeTbls;
			}
			set
			{
				this._StudentFeeTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.FeePeriodTbl = this;
		}
		
		private void detach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.FeePeriodTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionsTbl")]
	public partial class OptionsTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ActiveUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActiveUserChanging(System.Nullable<int> value);
    partial void OnActiveUserChanged();
    #endregion
		
		public OptionsTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveUser", DbType="Int")]
		public System.Nullable<int> ActiveUser
		{
			get
			{
				return this._ActiveUser;
			}
			set
			{
				if ((this._ActiveUser != value))
				{
					this.OnActiveUserChanging(value);
					this.SendPropertyChanging();
					this._ActiveUser = value;
					this.SendPropertyChanged("ActiveUser");
					this.OnActiveUserChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScholasticYearTbl")]
	public partial class ScholasticYearTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ScholasticYearName;
		
		private EntitySet<StudentFeeTbl> _StudentFeeTbls;
		
		private EntitySet<StudentTbl> _StudentTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScholasticYearNameChanging(string value);
    partial void OnScholasticYearNameChanged();
    #endregion
		
		public ScholasticYearTbl()
		{
			this._StudentFeeTbls = new EntitySet<StudentFeeTbl>(new Action<StudentFeeTbl>(this.attach_StudentFeeTbls), new Action<StudentFeeTbl>(this.detach_StudentFeeTbls));
			this._StudentTbls = new EntitySet<StudentTbl>(new Action<StudentTbl>(this.attach_StudentTbls), new Action<StudentTbl>(this.detach_StudentTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScholasticYearName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ScholasticYearName
		{
			get
			{
				return this._ScholasticYearName;
			}
			set
			{
				if ((this._ScholasticYearName != value))
				{
					this.OnScholasticYearNameChanging(value);
					this.SendPropertyChanging();
					this._ScholasticYearName = value;
					this.SendPropertyChanged("ScholasticYearName");
					this.OnScholasticYearNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScholasticYearTbl_StudentFeeTbl", Storage="_StudentFeeTbls", ThisKey="ID", OtherKey="FeeScholasticYear")]
		public EntitySet<StudentFeeTbl> StudentFeeTbls
		{
			get
			{
				return this._StudentFeeTbls;
			}
			set
			{
				this._StudentFeeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScholasticYearTbl_StudentTbl", Storage="_StudentTbls", ThisKey="ID", OtherKey="ScholasticYear")]
		public EntitySet<StudentTbl> StudentTbls
		{
			get
			{
				return this._StudentTbls;
			}
			set
			{
				this._StudentTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ScholasticYearTbl = this;
		}
		
		private void detach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.ScholasticYearTbl = null;
		}
		
		private void attach_StudentTbls(StudentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ScholasticYearTbl = this;
		}
		
		private void detach_StudentTbls(StudentTbl entity)
		{
			this.SendPropertyChanging();
			entity.ScholasticYearTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentFeeTbl")]
	public partial class StudentFeeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StudentID;
		
		private int _FeePeriod;
		
		private System.DateTime _FeePayingDate;
		
		private int _FeeScholasticYear;
		
		private double _FeeAmount;
		
		private string _VoucherNumber;
		
		private string _VoucherPreparedBy;
		
		private System.Nullable<System.DateTime> _InsertedOn;
		
		private System.Nullable<System.DateTime> _LastModifiedOn;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private EntityRef<FeePeriodTbl> _FeePeriodTbl;
		
		private EntityRef<ScholasticYearTbl> _ScholasticYearTbl;
		
		private EntityRef<StudentTbl> _StudentTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnFeePeriodChanging(int value);
    partial void OnFeePeriodChanged();
    partial void OnFeePayingDateChanging(System.DateTime value);
    partial void OnFeePayingDateChanged();
    partial void OnFeeScholasticYearChanging(int value);
    partial void OnFeeScholasticYearChanged();
    partial void OnFeeAmountChanging(double value);
    partial void OnFeeAmountChanged();
    partial void OnVoucherNumberChanging(string value);
    partial void OnVoucherNumberChanged();
    partial void OnVoucherPreparedByChanging(string value);
    partial void OnVoucherPreparedByChanged();
    partial void OnInsertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedOnChanged();
    partial void OnLastModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    #endregion
		
		public StudentFeeTbl()
		{
			this._FeePeriodTbl = default(EntityRef<FeePeriodTbl>);
			this._ScholasticYearTbl = default(EntityRef<ScholasticYearTbl>);
			this._StudentTbl = default(EntityRef<StudentTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePeriod", DbType="Int NOT NULL")]
		public int FeePeriod
		{
			get
			{
				return this._FeePeriod;
			}
			set
			{
				if ((this._FeePeriod != value))
				{
					if (this._FeePeriodTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeePeriodChanging(value);
					this.SendPropertyChanging();
					this._FeePeriod = value;
					this.SendPropertyChanged("FeePeriod");
					this.OnFeePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeePayingDate", DbType="Date NOT NULL")]
		public System.DateTime FeePayingDate
		{
			get
			{
				return this._FeePayingDate;
			}
			set
			{
				if ((this._FeePayingDate != value))
				{
					this.OnFeePayingDateChanging(value);
					this.SendPropertyChanging();
					this._FeePayingDate = value;
					this.SendPropertyChanged("FeePayingDate");
					this.OnFeePayingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeScholasticYear", DbType="Int NOT NULL")]
		public int FeeScholasticYear
		{
			get
			{
				return this._FeeScholasticYear;
			}
			set
			{
				if ((this._FeeScholasticYear != value))
				{
					if (this._ScholasticYearTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeeScholasticYearChanging(value);
					this.SendPropertyChanging();
					this._FeeScholasticYear = value;
					this.SendPropertyChanged("FeeScholasticYear");
					this.OnFeeScholasticYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeAmount", DbType="Float NOT NULL")]
		public double FeeAmount
		{
			get
			{
				return this._FeeAmount;
			}
			set
			{
				if ((this._FeeAmount != value))
				{
					this.OnFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FeeAmount = value;
					this.SendPropertyChanged("FeeAmount");
					this.OnFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNumber", DbType="NVarChar(50)")]
		public string VoucherNumber
		{
			get
			{
				return this._VoucherNumber;
			}
			set
			{
				if ((this._VoucherNumber != value))
				{
					this.OnVoucherNumberChanging(value);
					this.SendPropertyChanging();
					this._VoucherNumber = value;
					this.SendPropertyChanged("VoucherNumber");
					this.OnVoucherNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherPreparedBy", DbType="NVarChar(50)")]
		public string VoucherPreparedBy
		{
			get
			{
				return this._VoucherPreparedBy;
			}
			set
			{
				if ((this._VoucherPreparedBy != value))
				{
					this.OnVoucherPreparedByChanging(value);
					this.SendPropertyChanging();
					this._VoucherPreparedBy = value;
					this.SendPropertyChanged("VoucherPreparedBy");
					this.OnVoucherPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="Date")]
		public System.Nullable<System.DateTime> InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this.OnInsertedOnChanging(value);
					this.SendPropertyChanging();
					this._InsertedOn = value;
					this.SendPropertyChanged("InsertedOn");
					this.OnInsertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOn", DbType="Date")]
		public System.Nullable<System.DateTime> LastModifiedOn
		{
			get
			{
				return this._LastModifiedOn;
			}
			set
			{
				if ((this._LastModifiedOn != value))
				{
					this.OnLastModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOn = value;
					this.SendPropertyChanged("LastModifiedOn");
					this.OnLastModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeePeriodTbl_StudentFeeTbl", Storage="_FeePeriodTbl", ThisKey="FeePeriod", OtherKey="ID", IsForeignKey=true)]
		public FeePeriodTbl FeePeriodTbl
		{
			get
			{
				return this._FeePeriodTbl.Entity;
			}
			set
			{
				FeePeriodTbl previousValue = this._FeePeriodTbl.Entity;
				if (((previousValue != value) 
							|| (this._FeePeriodTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeePeriodTbl.Entity = null;
						previousValue.StudentFeeTbls.Remove(this);
					}
					this._FeePeriodTbl.Entity = value;
					if ((value != null))
					{
						value.StudentFeeTbls.Add(this);
						this._FeePeriod = value.ID;
					}
					else
					{
						this._FeePeriod = default(int);
					}
					this.SendPropertyChanged("FeePeriodTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScholasticYearTbl_StudentFeeTbl", Storage="_ScholasticYearTbl", ThisKey="FeeScholasticYear", OtherKey="ID", IsForeignKey=true)]
		public ScholasticYearTbl ScholasticYearTbl
		{
			get
			{
				return this._ScholasticYearTbl.Entity;
			}
			set
			{
				ScholasticYearTbl previousValue = this._ScholasticYearTbl.Entity;
				if (((previousValue != value) 
							|| (this._ScholasticYearTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScholasticYearTbl.Entity = null;
						previousValue.StudentFeeTbls.Remove(this);
					}
					this._ScholasticYearTbl.Entity = value;
					if ((value != null))
					{
						value.StudentFeeTbls.Add(this);
						this._FeeScholasticYear = value.ID;
					}
					else
					{
						this._FeeScholasticYear = default(int);
					}
					this.SendPropertyChanged("ScholasticYearTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTbl_StudentFeeTbl", Storage="_StudentTbl", ThisKey="StudentID", OtherKey="ID", IsForeignKey=true)]
		public StudentTbl StudentTbl
		{
			get
			{
				return this._StudentTbl.Entity;
			}
			set
			{
				StudentTbl previousValue = this._StudentTbl.Entity;
				if (((previousValue != value) 
							|| (this._StudentTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentTbl.Entity = null;
						previousValue.StudentFeeTbls.Remove(this);
					}
					this._StudentTbl.Entity = value;
					if ((value != null))
					{
						value.StudentFeeTbls.Add(this);
						this._StudentID = value.ID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentTbl")]
	public partial class StudentTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Father;
		
		private string _Mother;
		
		private string _NationalCardID;
		
		private System.DateTime _DateOfBirth;
		
		private int _StudentGrade;
		
		private int _EducationalLevel;
		
		private System.DateTime _RegisteringDate;
		
		private int _ScholasticYear;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _InsertedOn;
		
		private System.Nullable<System.DateTime> _LastModifiedOn;
		
		private System.Nullable<int> _InsertedBy;
		
		private System.Nullable<int> _LastModifiedBy;
		
		private EntitySet<StudentFeeTbl> _StudentFeeTbls;
		
		private EntityRef<EducationalLevelTbl> _EducationalLevelTbl;
		
		private EntityRef<ScholasticYearTbl> _ScholasticYearTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFatherChanging(string value);
    partial void OnFatherChanged();
    partial void OnMotherChanging(string value);
    partial void OnMotherChanged();
    partial void OnNationalCardIDChanging(string value);
    partial void OnNationalCardIDChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnStudentGradeChanging(int value);
    partial void OnStudentGradeChanged();
    partial void OnEducationalLevelChanging(int value);
    partial void OnEducationalLevelChanged();
    partial void OnRegisteringDateChanging(System.DateTime value);
    partial void OnRegisteringDateChanged();
    partial void OnScholasticYearChanging(int value);
    partial void OnScholasticYearChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnInsertedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertedOnChanged();
    partial void OnLastModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnChanged();
    partial void OnInsertedByChanging(System.Nullable<int> value);
    partial void OnInsertedByChanged();
    partial void OnLastModifiedByChanging(System.Nullable<int> value);
    partial void OnLastModifiedByChanged();
    #endregion
		
		public StudentTbl()
		{
			this._StudentFeeTbls = new EntitySet<StudentFeeTbl>(new Action<StudentFeeTbl>(this.attach_StudentFeeTbls), new Action<StudentFeeTbl>(this.detach_StudentFeeTbls));
			this._EducationalLevelTbl = default(EntityRef<EducationalLevelTbl>);
			this._ScholasticYearTbl = default(EntityRef<ScholasticYearTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Father", DbType="NVarChar(20)")]
		public string Father
		{
			get
			{
				return this._Father;
			}
			set
			{
				if ((this._Father != value))
				{
					this.OnFatherChanging(value);
					this.SendPropertyChanging();
					this._Father = value;
					this.SendPropertyChanged("Father");
					this.OnFatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mother", DbType="NVarChar(20)")]
		public string Mother
		{
			get
			{
				return this._Mother;
			}
			set
			{
				if ((this._Mother != value))
				{
					this.OnMotherChanging(value);
					this.SendPropertyChanging();
					this._Mother = value;
					this.SendPropertyChanged("Mother");
					this.OnMotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCardID", DbType="NVarChar(20)")]
		public string NationalCardID
		{
			get
			{
				return this._NationalCardID;
			}
			set
			{
				if ((this._NationalCardID != value))
				{
					this.OnNationalCardIDChanging(value);
					this.SendPropertyChanging();
					this._NationalCardID = value;
					this.SendPropertyChanged("NationalCardID");
					this.OnNationalCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentGrade", DbType="Int NOT NULL")]
		public int StudentGrade
		{
			get
			{
				return this._StudentGrade;
			}
			set
			{
				if ((this._StudentGrade != value))
				{
					this.OnStudentGradeChanging(value);
					this.SendPropertyChanging();
					this._StudentGrade = value;
					this.SendPropertyChanged("StudentGrade");
					this.OnStudentGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationalLevel", DbType="Int NOT NULL")]
		public int EducationalLevel
		{
			get
			{
				return this._EducationalLevel;
			}
			set
			{
				if ((this._EducationalLevel != value))
				{
					if (this._EducationalLevelTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationalLevelChanging(value);
					this.SendPropertyChanging();
					this._EducationalLevel = value;
					this.SendPropertyChanged("EducationalLevel");
					this.OnEducationalLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteringDate", DbType="Date NOT NULL")]
		public System.DateTime RegisteringDate
		{
			get
			{
				return this._RegisteringDate;
			}
			set
			{
				if ((this._RegisteringDate != value))
				{
					this.OnRegisteringDateChanging(value);
					this.SendPropertyChanging();
					this._RegisteringDate = value;
					this.SendPropertyChanged("RegisteringDate");
					this.OnRegisteringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScholasticYear", DbType="Int NOT NULL")]
		public int ScholasticYear
		{
			get
			{
				return this._ScholasticYear;
			}
			set
			{
				if ((this._ScholasticYear != value))
				{
					if (this._ScholasticYearTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScholasticYearChanging(value);
					this.SendPropertyChanging();
					this._ScholasticYear = value;
					this.SendPropertyChanged("ScholasticYear");
					this.OnScholasticYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(200)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedOn", DbType="Date")]
		public System.Nullable<System.DateTime> InsertedOn
		{
			get
			{
				return this._InsertedOn;
			}
			set
			{
				if ((this._InsertedOn != value))
				{
					this.OnInsertedOnChanging(value);
					this.SendPropertyChanging();
					this._InsertedOn = value;
					this.SendPropertyChanged("InsertedOn");
					this.OnInsertedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOn", DbType="Date")]
		public System.Nullable<System.DateTime> LastModifiedOn
		{
			get
			{
				return this._LastModifiedOn;
			}
			set
			{
				if ((this._LastModifiedOn != value))
				{
					this.OnLastModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOn = value;
					this.SendPropertyChanged("LastModifiedOn");
					this.OnLastModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedBy", DbType="Int")]
		public System.Nullable<int> InsertedBy
		{
			get
			{
				return this._InsertedBy;
			}
			set
			{
				if ((this._InsertedBy != value))
				{
					this.OnInsertedByChanging(value);
					this.SendPropertyChanging();
					this._InsertedBy = value;
					this.SendPropertyChanged("InsertedBy");
					this.OnInsertedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int")]
		public System.Nullable<int> LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTbl_StudentFeeTbl", Storage="_StudentFeeTbls", ThisKey="ID", OtherKey="StudentID")]
		public EntitySet<StudentFeeTbl> StudentFeeTbls
		{
			get
			{
				return this._StudentFeeTbls;
			}
			set
			{
				this._StudentFeeTbls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EducationalLevelTbl_StudentTbl", Storage="_EducationalLevelTbl", ThisKey="EducationalLevel", OtherKey="ID", IsForeignKey=true)]
		public EducationalLevelTbl EducationalLevelTbl
		{
			get
			{
				return this._EducationalLevelTbl.Entity;
			}
			set
			{
				EducationalLevelTbl previousValue = this._EducationalLevelTbl.Entity;
				if (((previousValue != value) 
							|| (this._EducationalLevelTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EducationalLevelTbl.Entity = null;
						previousValue.StudentTbls.Remove(this);
					}
					this._EducationalLevelTbl.Entity = value;
					if ((value != null))
					{
						value.StudentTbls.Add(this);
						this._EducationalLevel = value.ID;
					}
					else
					{
						this._EducationalLevel = default(int);
					}
					this.SendPropertyChanged("EducationalLevelTbl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScholasticYearTbl_StudentTbl", Storage="_ScholasticYearTbl", ThisKey="ScholasticYear", OtherKey="ID", IsForeignKey=true)]
		public ScholasticYearTbl ScholasticYearTbl
		{
			get
			{
				return this._ScholasticYearTbl.Entity;
			}
			set
			{
				ScholasticYearTbl previousValue = this._ScholasticYearTbl.Entity;
				if (((previousValue != value) 
							|| (this._ScholasticYearTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScholasticYearTbl.Entity = null;
						previousValue.StudentTbls.Remove(this);
					}
					this._ScholasticYearTbl.Entity = value;
					if ((value != null))
					{
						value.StudentTbls.Add(this);
						this._ScholasticYear = value.ID;
					}
					else
					{
						this._ScholasticYear = default(int);
					}
					this.SendPropertyChanged("ScholasticYearTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.StudentTbl = this;
		}
		
		private void detach_StudentFeeTbls(StudentFeeTbl entity)
		{
			this.SendPropertyChanging();
			entity.StudentTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoleTbl")]
	public partial class UserRoleTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RoleName;
		
		private System.Nullable<bool> _AddNewStudent;
		
		private System.Nullable<bool> _ManageStudentTbl;
		
		private System.Nullable<bool> _UpdateExistedStudent;
		
		private System.Nullable<bool> _DeleteStudentRecord;
		
		private System.Nullable<bool> _ViewStudentsReports;
		
		private System.Nullable<bool> _ViewStudentsStats;
		
		private System.Nullable<bool> _AddNewStudentFee;
		
		private System.Nullable<bool> _ManageStudentFeeTbl;
		
		private System.Nullable<bool> _UpdateExistedStudentFee;
		
		private System.Nullable<bool> _DeleteStudentFeeRecord;
		
		private System.Nullable<bool> _AddNewEducationalLevel;
		
		private System.Nullable<bool> _ManageEducationalLevels;
		
		private System.Nullable<bool> _AddNewScholasticYear;
		
		private System.Nullable<bool> _ManageScholasticYears;
		
		private System.Nullable<bool> _AddNewFeePeriod;
		
		private System.Nullable<bool> _ManageFeePeriods;
		
		private System.Nullable<bool> _ExportAllData;
		
		private System.Nullable<bool> _ImportAllData;
		
		private System.Nullable<bool> _ManageUsers;
		
		private System.Nullable<bool> _PromoteDb;
		
		private System.Nullable<bool> _BackupDb;
		
		private System.Nullable<bool> _RestoreDb;
		
		private System.Nullable<bool> _ViewFinancialReports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnAddNewStudentChanging(System.Nullable<bool> value);
    partial void OnAddNewStudentChanged();
    partial void OnManageStudentTblChanging(System.Nullable<bool> value);
    partial void OnManageStudentTblChanged();
    partial void OnUpdateExistedStudentChanging(System.Nullable<bool> value);
    partial void OnUpdateExistedStudentChanged();
    partial void OnDeleteStudentRecordChanging(System.Nullable<bool> value);
    partial void OnDeleteStudentRecordChanged();
    partial void OnViewStudentsReportsChanging(System.Nullable<bool> value);
    partial void OnViewStudentsReportsChanged();
    partial void OnViewStudentsStatsChanging(System.Nullable<bool> value);
    partial void OnViewStudentsStatsChanged();
    partial void OnAddNewStudentFeeChanging(System.Nullable<bool> value);
    partial void OnAddNewStudentFeeChanged();
    partial void OnManageStudentFeeTblChanging(System.Nullable<bool> value);
    partial void OnManageStudentFeeTblChanged();
    partial void OnUpdateExistedStudentFeeChanging(System.Nullable<bool> value);
    partial void OnUpdateExistedStudentFeeChanged();
    partial void OnDeleteStudentFeeRecordChanging(System.Nullable<bool> value);
    partial void OnDeleteStudentFeeRecordChanged();
    partial void OnAddNewEducationalLevelChanging(System.Nullable<bool> value);
    partial void OnAddNewEducationalLevelChanged();
    partial void OnManageEducationalLevelsChanging(System.Nullable<bool> value);
    partial void OnManageEducationalLevelsChanged();
    partial void OnAddNewScholasticYearChanging(System.Nullable<bool> value);
    partial void OnAddNewScholasticYearChanged();
    partial void OnManageScholasticYearsChanging(System.Nullable<bool> value);
    partial void OnManageScholasticYearsChanged();
    partial void OnAddNewFeePeriodChanging(System.Nullable<bool> value);
    partial void OnAddNewFeePeriodChanged();
    partial void OnManageFeePeriodsChanging(System.Nullable<bool> value);
    partial void OnManageFeePeriodsChanged();
    partial void OnExportAllDataChanging(System.Nullable<bool> value);
    partial void OnExportAllDataChanged();
    partial void OnImportAllDataChanging(System.Nullable<bool> value);
    partial void OnImportAllDataChanged();
    partial void OnManageUsersChanging(System.Nullable<bool> value);
    partial void OnManageUsersChanged();
    partial void OnPromoteDbChanging(System.Nullable<bool> value);
    partial void OnPromoteDbChanged();
    partial void OnBackupDbChanging(System.Nullable<bool> value);
    partial void OnBackupDbChanged();
    partial void OnRestoreDbChanging(System.Nullable<bool> value);
    partial void OnRestoreDbChanged();
    partial void OnViewFinancialReportsChanging(System.Nullable<bool> value);
    partial void OnViewFinancialReportsChanged();
    #endregion
		
		public UserRoleTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewStudent", DbType="Bit")]
		public System.Nullable<bool> AddNewStudent
		{
			get
			{
				return this._AddNewStudent;
			}
			set
			{
				if ((this._AddNewStudent != value))
				{
					this.OnAddNewStudentChanging(value);
					this.SendPropertyChanging();
					this._AddNewStudent = value;
					this.SendPropertyChanged("AddNewStudent");
					this.OnAddNewStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageStudentTbl", DbType="Bit")]
		public System.Nullable<bool> ManageStudentTbl
		{
			get
			{
				return this._ManageStudentTbl;
			}
			set
			{
				if ((this._ManageStudentTbl != value))
				{
					this.OnManageStudentTblChanging(value);
					this.SendPropertyChanging();
					this._ManageStudentTbl = value;
					this.SendPropertyChanged("ManageStudentTbl");
					this.OnManageStudentTblChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateExistedStudent", DbType="Bit")]
		public System.Nullable<bool> UpdateExistedStudent
		{
			get
			{
				return this._UpdateExistedStudent;
			}
			set
			{
				if ((this._UpdateExistedStudent != value))
				{
					this.OnUpdateExistedStudentChanging(value);
					this.SendPropertyChanging();
					this._UpdateExistedStudent = value;
					this.SendPropertyChanged("UpdateExistedStudent");
					this.OnUpdateExistedStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteStudentRecord", DbType="Bit")]
		public System.Nullable<bool> DeleteStudentRecord
		{
			get
			{
				return this._DeleteStudentRecord;
			}
			set
			{
				if ((this._DeleteStudentRecord != value))
				{
					this.OnDeleteStudentRecordChanging(value);
					this.SendPropertyChanging();
					this._DeleteStudentRecord = value;
					this.SendPropertyChanged("DeleteStudentRecord");
					this.OnDeleteStudentRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewStudentsReports", DbType="Bit")]
		public System.Nullable<bool> ViewStudentsReports
		{
			get
			{
				return this._ViewStudentsReports;
			}
			set
			{
				if ((this._ViewStudentsReports != value))
				{
					this.OnViewStudentsReportsChanging(value);
					this.SendPropertyChanging();
					this._ViewStudentsReports = value;
					this.SendPropertyChanged("ViewStudentsReports");
					this.OnViewStudentsReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewStudentsStats", DbType="Bit")]
		public System.Nullable<bool> ViewStudentsStats
		{
			get
			{
				return this._ViewStudentsStats;
			}
			set
			{
				if ((this._ViewStudentsStats != value))
				{
					this.OnViewStudentsStatsChanging(value);
					this.SendPropertyChanging();
					this._ViewStudentsStats = value;
					this.SendPropertyChanged("ViewStudentsStats");
					this.OnViewStudentsStatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewStudentFee", DbType="Bit")]
		public System.Nullable<bool> AddNewStudentFee
		{
			get
			{
				return this._AddNewStudentFee;
			}
			set
			{
				if ((this._AddNewStudentFee != value))
				{
					this.OnAddNewStudentFeeChanging(value);
					this.SendPropertyChanging();
					this._AddNewStudentFee = value;
					this.SendPropertyChanged("AddNewStudentFee");
					this.OnAddNewStudentFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageStudentFeeTbl", DbType="Bit")]
		public System.Nullable<bool> ManageStudentFeeTbl
		{
			get
			{
				return this._ManageStudentFeeTbl;
			}
			set
			{
				if ((this._ManageStudentFeeTbl != value))
				{
					this.OnManageStudentFeeTblChanging(value);
					this.SendPropertyChanging();
					this._ManageStudentFeeTbl = value;
					this.SendPropertyChanged("ManageStudentFeeTbl");
					this.OnManageStudentFeeTblChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateExistedStudentFee", DbType="Bit")]
		public System.Nullable<bool> UpdateExistedStudentFee
		{
			get
			{
				return this._UpdateExistedStudentFee;
			}
			set
			{
				if ((this._UpdateExistedStudentFee != value))
				{
					this.OnUpdateExistedStudentFeeChanging(value);
					this.SendPropertyChanging();
					this._UpdateExistedStudentFee = value;
					this.SendPropertyChanged("UpdateExistedStudentFee");
					this.OnUpdateExistedStudentFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteStudentFeeRecord", DbType="Bit")]
		public System.Nullable<bool> DeleteStudentFeeRecord
		{
			get
			{
				return this._DeleteStudentFeeRecord;
			}
			set
			{
				if ((this._DeleteStudentFeeRecord != value))
				{
					this.OnDeleteStudentFeeRecordChanging(value);
					this.SendPropertyChanging();
					this._DeleteStudentFeeRecord = value;
					this.SendPropertyChanged("DeleteStudentFeeRecord");
					this.OnDeleteStudentFeeRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewEducationalLevel", DbType="Bit")]
		public System.Nullable<bool> AddNewEducationalLevel
		{
			get
			{
				return this._AddNewEducationalLevel;
			}
			set
			{
				if ((this._AddNewEducationalLevel != value))
				{
					this.OnAddNewEducationalLevelChanging(value);
					this.SendPropertyChanging();
					this._AddNewEducationalLevel = value;
					this.SendPropertyChanged("AddNewEducationalLevel");
					this.OnAddNewEducationalLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageEducationalLevels", DbType="Bit")]
		public System.Nullable<bool> ManageEducationalLevels
		{
			get
			{
				return this._ManageEducationalLevels;
			}
			set
			{
				if ((this._ManageEducationalLevels != value))
				{
					this.OnManageEducationalLevelsChanging(value);
					this.SendPropertyChanging();
					this._ManageEducationalLevels = value;
					this.SendPropertyChanged("ManageEducationalLevels");
					this.OnManageEducationalLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewScholasticYear", DbType="Bit")]
		public System.Nullable<bool> AddNewScholasticYear
		{
			get
			{
				return this._AddNewScholasticYear;
			}
			set
			{
				if ((this._AddNewScholasticYear != value))
				{
					this.OnAddNewScholasticYearChanging(value);
					this.SendPropertyChanging();
					this._AddNewScholasticYear = value;
					this.SendPropertyChanged("AddNewScholasticYear");
					this.OnAddNewScholasticYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageScholasticYears", DbType="Bit")]
		public System.Nullable<bool> ManageScholasticYears
		{
			get
			{
				return this._ManageScholasticYears;
			}
			set
			{
				if ((this._ManageScholasticYears != value))
				{
					this.OnManageScholasticYearsChanging(value);
					this.SendPropertyChanging();
					this._ManageScholasticYears = value;
					this.SendPropertyChanged("ManageScholasticYears");
					this.OnManageScholasticYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddNewFeePeriod", DbType="Bit")]
		public System.Nullable<bool> AddNewFeePeriod
		{
			get
			{
				return this._AddNewFeePeriod;
			}
			set
			{
				if ((this._AddNewFeePeriod != value))
				{
					this.OnAddNewFeePeriodChanging(value);
					this.SendPropertyChanging();
					this._AddNewFeePeriod = value;
					this.SendPropertyChanged("AddNewFeePeriod");
					this.OnAddNewFeePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageFeePeriods", DbType="Bit")]
		public System.Nullable<bool> ManageFeePeriods
		{
			get
			{
				return this._ManageFeePeriods;
			}
			set
			{
				if ((this._ManageFeePeriods != value))
				{
					this.OnManageFeePeriodsChanging(value);
					this.SendPropertyChanging();
					this._ManageFeePeriods = value;
					this.SendPropertyChanged("ManageFeePeriods");
					this.OnManageFeePeriodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportAllData", DbType="Bit")]
		public System.Nullable<bool> ExportAllData
		{
			get
			{
				return this._ExportAllData;
			}
			set
			{
				if ((this._ExportAllData != value))
				{
					this.OnExportAllDataChanging(value);
					this.SendPropertyChanging();
					this._ExportAllData = value;
					this.SendPropertyChanged("ExportAllData");
					this.OnExportAllDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportAllData", DbType="Bit")]
		public System.Nullable<bool> ImportAllData
		{
			get
			{
				return this._ImportAllData;
			}
			set
			{
				if ((this._ImportAllData != value))
				{
					this.OnImportAllDataChanging(value);
					this.SendPropertyChanging();
					this._ImportAllData = value;
					this.SendPropertyChanged("ImportAllData");
					this.OnImportAllDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageUsers", DbType="Bit")]
		public System.Nullable<bool> ManageUsers
		{
			get
			{
				return this._ManageUsers;
			}
			set
			{
				if ((this._ManageUsers != value))
				{
					this.OnManageUsersChanging(value);
					this.SendPropertyChanging();
					this._ManageUsers = value;
					this.SendPropertyChanged("ManageUsers");
					this.OnManageUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoteDb", DbType="Bit")]
		public System.Nullable<bool> PromoteDb
		{
			get
			{
				return this._PromoteDb;
			}
			set
			{
				if ((this._PromoteDb != value))
				{
					this.OnPromoteDbChanging(value);
					this.SendPropertyChanging();
					this._PromoteDb = value;
					this.SendPropertyChanged("PromoteDb");
					this.OnPromoteDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupDb", DbType="Bit")]
		public System.Nullable<bool> BackupDb
		{
			get
			{
				return this._BackupDb;
			}
			set
			{
				if ((this._BackupDb != value))
				{
					this.OnBackupDbChanging(value);
					this.SendPropertyChanging();
					this._BackupDb = value;
					this.SendPropertyChanged("BackupDb");
					this.OnBackupDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestoreDb", DbType="Bit")]
		public System.Nullable<bool> RestoreDb
		{
			get
			{
				return this._RestoreDb;
			}
			set
			{
				if ((this._RestoreDb != value))
				{
					this.OnRestoreDbChanging(value);
					this.SendPropertyChanging();
					this._RestoreDb = value;
					this.SendPropertyChanged("RestoreDb");
					this.OnRestoreDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewFinancialReports", DbType="Bit")]
		public System.Nullable<bool> ViewFinancialReports
		{
			get
			{
				return this._ViewFinancialReports;
			}
			set
			{
				if ((this._ViewFinancialReports != value))
				{
					this.OnViewFinancialReportsChanging(value);
					this.SendPropertyChanging();
					this._ViewFinancialReports = value;
					this.SendPropertyChanged("ViewFinancialReports");
					this.OnViewFinancialReportsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
